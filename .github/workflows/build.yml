# Copyright 2019-2022 Tauri Programme within The Commons Conservancy
# SPDX-License-Identifier: Apache-2.0
# SPDX-License-Identifier: MIT

name: build

on:
  workflow_dispatch:
  pull_request_target:
    branches: [dev]
  push:
    branches: [dev, next]

jobs:
  build-locale-list:
    # Crowdin only supports syncing concurrently
    # This forces any runners using Crowdin to queue
    concurrency:
      group: crowdin_sync
      cancel-in-progress: false
    runs-on: ubuntu-latest
    outputs:
      locale-list: ${{ steps.generate.outputs.locale-list }}
    steps:
      - name: Checkout site
        uses: actions/checkout@v3
        with:
          # Forces so that only pull requests from the original repo are executed
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - uses: actions/setup-node@v3
        with:
          cache: 'yarn'
      - name: Setup yarn
        run: yarn install --frozen-lockfile
      - name: Generate i18n files
        run: yarn docusaurus write-translations
      - name: Upload i18n files
        if: github.event_name == 'push' && github.ref_name == 'dev'
        env:
          CROWDIN_TOKEN: ${{ secrets.CROWDIN_TOKEN }}
        run: yarn crowdin upload
      - name: Download i18n files
        if: (github.event_name == 'push' && github.ref_name == 'dev') || github.head_ref == 'i18n-preview'
        env:
          CROWDIN_TOKEN: ${{ secrets.CROWDIN_TOKEN }}
        run: yarn crowdin download
      - name: Get locales
        id: generate
        run: node ./.scripts/build.js
      - name: Save translations
        uses: actions/upload-artifact@v3
        with:
          name: i18n
          path: i18n
          if-no-files-found: error
      - name: Save config
        uses: actions/upload-artifact@v3
        with:
          name: config
          path: docusaurus.config.js
          if-no-files-found: error

  build-locales:
    needs: build-locale-list
    runs-on: ubuntu-latest
    strategy:
      matrix:
        locale: ${{ fromJson(needs.build-locale-list.outputs.locale-list) }}
    steps:
      - uses: actions/checkout@v3
        with:
          # Forces so that only pull requests from the original repo are executed
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Retrieve translations
        id: i18n
        uses: actions/download-artifact@v3
        with:
          name: i18n
          path: i18n
      - name: Retrieve config
        id: config
        uses: actions/download-artifact@v3
        with:
          name: config
      - uses: actions/setup-node@v3
        with:
          cache: 'yarn'
      - name: Setup yarn
        run: yarn install --frozen-lockfile
      - name: Build English locale
        if: matrix.locale == 'en'
        run: yarn build --locale ${{ matrix.locale }}
      - name: Build non-English locale
        if: matrix.locale != 'en'
        env:
          LOCALE: ${{ matrix.locale }}
        # Files are copied to ensure the full docs are available for each locale
        # This allows us to selectively enable docs for translations and falls back
        # to building 'en' docs for non-translated files
        run: |
          mkdir -p i18n/${{ matrix.locale }}/docusaurus-plugin-content-docs/current
          rsync -a --ignore-existing docs/ i18n/${{ matrix.locale }}/docusaurus-plugin-content-docs/current
          yarn build --locale ${{ matrix.locale }} --out-dir ./build/${{ matrix.locale }}
      - name: Save build folder
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
          if-no-files-found: error

  deploy-to-netlify:
    needs: build-locales
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Forces so that only pull requests from the original repo are executed
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Retrieve build folder
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      - name: Deploy to Netlify
        # Fork of https://github.com/nwtgck/actions-netlify for security reasons
        uses: tauri-apps/actions-netlify@v2.0.0
        with:
          publish-dir: './build'
          netlify-config-path: ./netlify.toml
          production-deploy: ${{ github.event_name == 'push' && github.ref_name == 'dev' }}
          alias: ${{ github.ref_name }}${{ github.event.number }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy from GitHub Actions'
          fails-without-credentials: true
          enable-commit-comment: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  update-search-index:
    concurrency:
      group: search-indexing
      cancel-in-progress: true
    needs: deploy-to-netlify
    if: (github.event_name == 'push' && github.ref_name == 'dev')
    runs-on: ubuntu-latest
    env:
      MEILISEARCH_HOST_URL: ${{ secrets.MEILISEARCH_HOST_URL }}
      MEILISEARCH_API_KEY: ${{ secrets.MEILISEARCH_API_KEY }}
      CONFIG_FILE_PATH: ${{ github.workspace }}/scraper.json
    steps:
      - uses: actions/checkout@v3

      - name: Wait for Meilisearch
        run: node ./.scripts/wait-for-search.js

      - name: Run scraper
        run: |
          docker run -t --rm \
            -e MEILISEARCH_HOST_URL=$MEILISEARCH_HOST_URL \
            -e MEILISEARCH_API_KEY=$MEILISEARCH_API_KEY \
            -v $CONFIG_FILE_PATH:/docs-scraper/scraper.json \
            getmeili/docs-scraper:v0.12.7 pipenv run ./docs_scraper ./scraper.json

      - name: Wait for Meilisearch
        run: node ./.scripts/wait-for-search.js

      - name: Swap index
        run: |
          curl -X POST "$MEILISEARCH_HOST_URL/swap-indexes" -H "Authorization: Bearer $MEILISEARCH_API_KEY" -H "Content-Type: application/json" --data-binary '[ { "indexes": ["docs-v1", "docs-v1-staging"] } ]'
