{"id":0,"name":"@tauri-apps/api","kind":1,"flags":{},"originalName":"","children":[{"id":1,"name":"app","kind":2,"kindString":"Module","flags":{},"children":[{"id":2,"name":"getName","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"app.ts","line":37,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/app.ts#L37"}],"signatures":[{"id":3,"name":"getName","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the application name."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getName } from '@tauri-apps/api/app';\nconst appName = await getName();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":6,"name":"getTauriVersion","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"app.ts","line":52,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/app.ts#L52"}],"signatures":[{"id":7,"name":"getTauriVersion","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the Tauri version."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getTauriVersion } from '@tauri-apps/api/app';\nconst tauriVersion = await getTauriVersion();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":4,"name":"getVersion","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"app.ts","line":23,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/app.ts#L23"}],"signatures":[{"id":5,"name":"getVersion","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the application version."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getVersion } from '@tauri-apps/api/app';\nconst appVersion = await getVersion();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":10,"name":"hide","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"app.ts","line":82,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/app.ts#L82"}],"signatures":[{"id":11,"name":"hide","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Hides the application on macOS."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { hide } from '@tauri-apps/api/app';\nawait hide();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.2.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":8,"name":"show","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"app.ts","line":67,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/app.ts#L67"}],"signatures":[{"id":9,"name":"show","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Shows the application on macOS. This function does not automatically focus any specific app window."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { show } from '@tauri-apps/api/app';\nawait show();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.2.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Functions","children":[2,6,4,10,8]}],"sources":[{"fileName":"app.ts","line":5,"character":0,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/app.ts#L5"}]},{"id":12,"name":"event","kind":2,"kindString":"Module","flags":{},"comment":{"summary":[{"kind":"text","text":"The event system allows you to emit events to the backend and listen to events from it.\n\nThis package is also accessible with "},{"kind":"code","text":"`window.__TAURI__.event`"},{"kind":"text","text":" when ["},{"kind":"code","text":"`build.withGlobalTauri`"},{"kind":"text","text":"](https://tauri.app/v1/api/config/#buildconfig.withglobaltauri) in "},{"kind":"code","text":"`tauri.conf.json`"},{"kind":"text","text":" is set to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"children":[{"id":47,"name":"TauriEvent","kind":8,"kindString":"Enumeration","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"1.1.0"}]}]},"children":[{"id":60,"name":"MENU","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"event.ts","line":59,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L59"}],"type":{"type":"literal","value":"tauri://menu"}},{"id":54,"name":"WINDOW_BLUR","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"event.ts","line":53,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L53"}],"type":{"type":"literal","value":"tauri://blur"}},{"id":50,"name":"WINDOW_CLOSE_REQUESTED","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"event.ts","line":49,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L49"}],"type":{"type":"literal","value":"tauri://close-requested"}},{"id":51,"name":"WINDOW_CREATED","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"event.ts","line":50,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L50"}],"type":{"type":"literal","value":"tauri://window-created"}},{"id":52,"name":"WINDOW_DESTROYED","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"event.ts","line":51,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L51"}],"type":{"type":"literal","value":"tauri://destroyed"}},{"id":57,"name":"WINDOW_FILE_DROP","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"event.ts","line":56,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L56"}],"type":{"type":"literal","value":"tauri://file-drop"}},{"id":59,"name":"WINDOW_FILE_DROP_CANCELLED","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"event.ts","line":58,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L58"}],"type":{"type":"literal","value":"tauri://file-drop-cancelled"}},{"id":58,"name":"WINDOW_FILE_DROP_HOVER","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"event.ts","line":57,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L57"}],"type":{"type":"literal","value":"tauri://file-drop-hover"}},{"id":53,"name":"WINDOW_FOCUS","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"event.ts","line":52,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L52"}],"type":{"type":"literal","value":"tauri://focus"}},{"id":49,"name":"WINDOW_MOVED","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"event.ts","line":48,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L48"}],"type":{"type":"literal","value":"tauri://move"}},{"id":48,"name":"WINDOW_RESIZED","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"event.ts","line":47,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L47"}],"type":{"type":"literal","value":"tauri://resize"}},{"id":55,"name":"WINDOW_SCALE_FACTOR_CHANGED","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"event.ts","line":54,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L54"}],"type":{"type":"literal","value":"tauri://scale-change"}},{"id":56,"name":"WINDOW_THEME_CHANGED","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"event.ts","line":55,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L55"}],"type":{"type":"literal","value":"tauri://theme-changed"}}],"groups":[{"title":"Enumeration Members","children":[60,54,50,51,52,57,59,58,53,49,48,55,56]}],"sources":[{"fileName":"event.ts","line":46,"character":5,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L46"}]},{"id":13,"name":"Event","kind":256,"kindString":"Interface","flags":{},"children":[{"id":14,"name":"event","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Event name"}]},"sources":[{"fileName":"event.ts","line":16,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L16"}],"type":{"type":"reference","id":27,"name":"EventName"}},{"id":16,"name":"id","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Event identifier used to unlisten"}]},"sources":[{"fileName":"event.ts","line":20,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L20"}],"type":{"type":"intrinsic","name":"number"}},{"id":17,"name":"payload","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Event payload"}]},"sources":[{"fileName":"event.ts","line":22,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L22"}],"type":{"type":"reference","id":18,"name":"T"}},{"id":15,"name":"windowLabel","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The label of the window that emitted this event."}]},"sources":[{"fileName":"event.ts","line":18,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L18"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[14,16,17,15]}],"sources":[{"fileName":"event.ts","line":14,"character":10,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L14"}],"typeParameters":[{"id":18,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}]},{"id":28,"name":"Options","kind":256,"kindString":"Interface","flags":{},"children":[{"id":29,"name":"target","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Label of the window the function targets.\n\nWhen listening to events and using this value,\nonly events triggered by the window with the given label are received.\n\nWhen emitting events, only the window with the given label will receive it."}]},"sources":[{"fileName":"event.ts","line":40,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L40"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[29]}],"sources":[{"fileName":"event.ts","line":31,"character":10,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L31"}]},{"id":19,"name":"EventCallback","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"event.ts","line":25,"character":5,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L25"}],"typeParameters":[{"id":23,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reflection","declaration":{"id":20,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"event.ts","line":25,"character":24,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L25"}],"signatures":[{"id":21,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":22,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":13,"typeArguments":[{"type":"reference","id":23,"name":"T"}],"name":"Event"}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":27,"name":"EventName","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"event.ts","line":29,"character":5,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L29"}],"type":{"type":"union","types":[{"type":"template-literal","head":"","tail":[[{"type":"reference","id":47,"name":"TauriEvent"},""]]},{"type":"intersection","types":[{"type":"intrinsic","name":"string"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}]}]}},{"id":24,"name":"UnlistenFn","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"event.ts","line":27,"character":5,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L27"}],"type":{"type":"reflection","declaration":{"id":25,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"event.ts","line":27,"character":18,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L27"}],"signatures":[{"id":26,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}},{"id":42,"name":"emit","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"event.ts","line":164,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L164"}],"signatures":[{"id":43,"name":"emit","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Emits an event to the backend and all Tauri windows."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { emit } from '@tauri-apps/api/event';\nawait emit('frontend-loaded', { loggedIn: true, token: 'authToken' });\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"parameters":[{"id":44,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Event name. Must include only alphanumeric characters, "},{"kind":"code","text":"`-`"},{"kind":"text","text":", "},{"kind":"code","text":"`/`"},{"kind":"text","text":", "},{"kind":"code","text":"`:`"},{"kind":"text","text":" and "},{"kind":"code","text":"`_`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}},{"id":45,"name":"payload","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"unknown"}},{"id":46,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":28,"name":"Options"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":30,"name":"listen","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"event.ts","line":99,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L99"}],"signatures":[{"id":31,"name":"listen","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listen to an event. The event can be either global or window-specific.\nSee "},{"kind":"inline-tag","tag":"@link","text":"windowLabel","target":15},{"kind":"text","text":" to check the event source."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { listen } from '@tauri-apps/api/event';\nconst unlisten = await listen<string>('error', (event) => {\n  console.log(`Got error in window ${event.windowLabel}, payload: ${event.payload}`);\n});\n\n// you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\nunlisten();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise resolving to a function to unlisten to the event.\nNote that removing the listener is required if your listener goes out of scope e.g. the component is unmounted."}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"typeParameter":[{"id":32,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":33,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Event name. Must include only alphanumeric characters, "},{"kind":"code","text":"`-`"},{"kind":"text","text":", "},{"kind":"code","text":"`/`"},{"kind":"text","text":", "},{"kind":"code","text":"`:`"},{"kind":"text","text":" and "},{"kind":"code","text":"`_`"},{"kind":"text","text":"."}]},"type":{"type":"reference","id":27,"name":"EventName"}},{"id":34,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Event handler callback."}]},"type":{"type":"reference","id":19,"typeArguments":[{"type":"reference","id":32,"name":"T"}],"name":"EventCallback"}},{"id":35,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":28,"name":"Options"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":24,"name":"UnlistenFn"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":36,"name":"once","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"event.ts","line":137,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L137"}],"signatures":[{"id":37,"name":"once","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listen to an one-off event. See "},{"kind":"inline-tag","tag":"@link","text":"listen","target":30},{"kind":"text","text":" for more information."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { once } from '@tauri-apps/api/event';\ninterface LoadedPayload {\n  loggedIn: boolean,\n  token: string\n}\nconst unlisten = await once<LoadedPayload>('loaded', (event) => {\n  console.log(`App is loaded, loggedIn: ${event.payload.loggedIn}, token: ${event.payload.token}`);\n});\n\n// you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\nunlisten();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise resolving to a function to unlisten to the event.\nNote that removing the listener is required if your listener goes out of scope e.g. the component is unmounted."}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"typeParameter":[{"id":38,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":39,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Event name. Must include only alphanumeric characters, "},{"kind":"code","text":"`-`"},{"kind":"text","text":", "},{"kind":"code","text":"`/`"},{"kind":"text","text":", "},{"kind":"code","text":"`:`"},{"kind":"text","text":" and "},{"kind":"code","text":"`_`"},{"kind":"text","text":"."}]},"type":{"type":"reference","id":27,"name":"EventName"}},{"id":40,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":19,"typeArguments":[{"type":"reference","id":38,"name":"T"}],"name":"EventCallback"}},{"id":41,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":28,"name":"Options"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":24,"name":"UnlistenFn"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Enumerations","children":[47]},{"title":"Interfaces","children":[13,28]},{"title":"Type Aliases","children":[19,27,24]},{"title":"Functions","children":[42,30,36]}],"sources":[{"fileName":"event.ts","line":12,"character":0,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/event.ts#L12"}]},{"id":61,"name":"mocks","kind":2,"kindString":"Module","flags":{},"children":[{"id":76,"name":"clearMocks","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"mocks.ts","line":194,"character":16,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/mocks.ts#L194"}],"signatures":[{"id":77,"name":"clearMocks","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Clears mocked functions/data injected by the other functions in this module.\nWhen using a test runner that doesn't provide a fresh window object for each test, calling this function will reset tauri specific properties.\n\n# Example\n\n"},{"kind":"code","text":"```js\nimport { mockWindows, clearMocks } from \"@tauri-apps/api/mocks\"\n\nafterEach(() => {\n   clearMocks()\n})\n\ntest(\"mocked windows\", () => {\n   mockWindows(\"main\", \"second\", \"third\");\n\n   expect(window.__TAURI_INTERNALS__).toHaveProperty(\"metadata\")\n})\n\ntest(\"no mocked windows\", () => {\n   expect(window.__TAURI_INTERNALS__).not.toHaveProperty(\"metadata\")\n})\n```"}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":73,"name":"mockConvertFileSrc","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"mocks.ts","line":155,"character":16,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/mocks.ts#L155"}],"signatures":[{"id":74,"name":"mockConvertFileSrc","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Mock "},{"kind":"code","text":"`convertFileSrc`"},{"kind":"text","text":" function"}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```js\nimport { mockConvertFileSrc } from \"@tauri-apps/api/mocks\";\nimport { convertFileSrc } from \"@tauri-apps/api/primitives\";\n\nmockConvertFileSrc(\"windows\")\n\nconst url = convertFileSrc(\"C:\\\\Users\\\\user\\\\file.txt\")\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.6.0"}]}]},"parameters":[{"id":75,"name":"osName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The operating system to mock, can be one of linux, macos, or windows"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":62,"name":"mockIPC","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"mocks.ts","line":65,"character":16,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/mocks.ts#L65"}],"signatures":[{"id":63,"name":"mockIPC","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Intercepts all IPC requests with the given mock handler.\n\nThis function can be used when testing tauri frontend applications or when running the frontend in a Node.js context during static site generation.\n\n# Examples\n\nTesting setup using vitest:\n"},{"kind":"code","text":"```js\nimport { mockIPC, clearMocks } from \"@tauri-apps/api/mocks\"\nimport { invoke } from \"@tauri-apps/api/primitives\"\n\nafterEach(() => {\n   clearMocks()\n})\n\ntest(\"mocked command\", () => {\n mockIPC((cmd, payload) => {\n  switch (cmd) {\n    case \"add\":\n      return (payload.a as number) + (payload.b as number);\n    default:\n      break;\n    }\n });\n\n expect(invoke('add', { a: 12, b: 15 })).resolves.toBe(27);\n})\n```"},{"kind":"text","text":"\n\nThe callback function can also return a Promise:\n"},{"kind":"code","text":"```js\nimport { mockIPC, clearMocks } from \"@tauri-apps/api/mocks\"\nimport { invoke } from \"@tauri-apps/api/primitives\"\n\nafterEach(() => {\n   clearMocks()\n})\n\ntest(\"mocked command\", () => {\n mockIPC((cmd, payload) => {\n  if(cmd === \"get_data\") {\n   return fetch(\"https://example.com/data.json\")\n     .then((response) => response.json())\n  }\n });\n\n expect(invoke('get_data')).resolves.toBe({ foo: 'bar' });\n})\n```"}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"parameters":[{"id":64,"name":"cb","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":65,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"mocks.ts","line":66,"character":6,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/mocks.ts#L66"}],"signatures":[{"id":66,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":67,"name":"cmd","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":68,"name":"payload","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"unknown"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}}],"type":{"type":"intrinsic","name":"unknown"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":69,"name":"mockWindows","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"mocks.ts","line":127,"character":16,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/mocks.ts#L127"}],"signatures":[{"id":70,"name":"mockWindows","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Mocks one or many window labels.\nIn non-tauri context it is required to call this function *before* using the "},{"kind":"code","text":"`@tauri-apps/api/window`"},{"kind":"text","text":" module.\n\nThis function only mocks the *presence* of windows,\nwindow properties (e.g. width and height) can be mocked like regular IPC calls using the "},{"kind":"code","text":"`mockIPC`"},{"kind":"text","text":" function.\n\n# Examples\n\n"},{"kind":"code","text":"```js\nimport { mockWindows } from \"@tauri-apps/api/mocks\";\nimport { getCurrent } from \"@tauri-apps/api/window\";\n\nmockWindows(\"main\", \"second\", \"third\");\n\nconst win = getCurrent();\n\nwin.label // \"main\"\n```"},{"kind":"text","text":"\n\n"},{"kind":"code","text":"```js\nimport { mockWindows } from \"@tauri-apps/api/mocks\";\n\nmockWindows(\"main\", \"second\", \"third\");\n\nmockIPC((cmd, args) => {\n if (cmd === \"plugin:event|emit\") {\n   console.log('emit event', args?.event, args?.payload);\n }\n});\n\nconst { emit } = await import(\"@tauri-apps/api/event\");\nawait emit('loaded'); // this will cause the mocked IPC handler to log to the console.\n```"}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"parameters":[{"id":71,"name":"current","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Label of window this JavaScript context is running in."}]},"type":{"type":"intrinsic","name":"string"}},{"id":72,"name":"additionalWindows","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"Label of additional windows the app has."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Functions","children":[76,73,62,69]}],"sources":[{"fileName":"mocks.ts","line":5,"character":0,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/mocks.ts#L5"}]},{"id":78,"name":"path","kind":2,"kindString":"Module","flags":{},"comment":{"summary":[{"kind":"text","text":"The path module provides utilities for working with file and directory paths.\n\nThis package is also accessible with "},{"kind":"code","text":"`window.__TAURI__.path`"},{"kind":"text","text":" when ["},{"kind":"code","text":"`build.withGlobalTauri`"},{"kind":"text","text":"](https://tauri.app/v1/api/config/#buildconfig.withglobaltauri) in "},{"kind":"code","text":"`tauri.conf.json`"},{"kind":"text","text":" is set to "},{"kind":"code","text":"`true`"},{"kind":"text","text":".\n\nIt is recommended to allowlist only the APIs you use for optimal bundle size and security."}]},"children":[{"id":79,"name":"BaseDirectory","kind":8,"kindString":"Enumeration","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"2.0.0"}]}]},"children":[{"id":95,"name":"AppCache","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":35,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L35"}],"type":{"type":"literal","value":16}},{"id":92,"name":"AppConfig","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":32,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L32"}],"type":{"type":"literal","value":13}},{"id":93,"name":"AppData","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":33,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L33"}],"type":{"type":"literal","value":14}},{"id":94,"name":"AppLocalData","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":34,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L34"}],"type":{"type":"literal","value":15}},{"id":96,"name":"AppLog","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":36,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L36"}],"type":{"type":"literal","value":17}},{"id":80,"name":"Audio","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":20,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L20"}],"type":{"type":"literal","value":1}},{"id":81,"name":"Cache","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":21,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L21"}],"type":{"type":"literal","value":2}},{"id":82,"name":"Config","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":22,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L22"}],"type":{"type":"literal","value":3}},{"id":83,"name":"Data","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":23,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L23"}],"type":{"type":"literal","value":4}},{"id":97,"name":"Desktop","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":38,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L38"}],"type":{"type":"literal","value":18}},{"id":85,"name":"Document","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":25,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L25"}],"type":{"type":"literal","value":6}},{"id":86,"name":"Download","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":26,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L26"}],"type":{"type":"literal","value":7}},{"id":98,"name":"Executable","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":39,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L39"}],"type":{"type":"literal","value":19}},{"id":99,"name":"Font","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":40,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L40"}],"type":{"type":"literal","value":20}},{"id":100,"name":"Home","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":41,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L41"}],"type":{"type":"literal","value":21}},{"id":84,"name":"LocalData","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":24,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L24"}],"type":{"type":"literal","value":5}},{"id":87,"name":"Picture","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":27,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L27"}],"type":{"type":"literal","value":8}},{"id":88,"name":"Public","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":28,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L28"}],"type":{"type":"literal","value":9}},{"id":90,"name":"Resource","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":30,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L30"}],"type":{"type":"literal","value":11}},{"id":101,"name":"Runtime","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":42,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L42"}],"type":{"type":"literal","value":22}},{"id":91,"name":"Temp","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":31,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L31"}],"type":{"type":"literal","value":12}},{"id":102,"name":"Template","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":43,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L43"}],"type":{"type":"literal","value":23}},{"id":89,"name":"Video","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"path.ts","line":29,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L29"}],"type":{"type":"literal","value":10}}],"groups":[{"title":"Enumeration Members","children":[95,92,93,94,96,80,81,82,83,97,85,86,98,99,100,84,87,88,90,101,91,102,89]}],"sources":[{"fileName":"path.ts","line":19,"character":5,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L19"}]},{"id":109,"name":"appCacheDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":108,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L108"}],"signatures":[{"id":110,"name":"appCacheDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the suggested directory for your app's cache files.\nResolves to "},{"kind":"code","text":"`${cacheDir}/${bundleIdentifier}`"},{"kind":"text","text":", where "},{"kind":"code","text":"`bundleIdentifier`"},{"kind":"text","text":" is the value ["},{"kind":"code","text":"`tauri.bundle.identifier`"},{"kind":"text","text":"](https://tauri.app/v1/api/config/#bundleconfig.identifier) is configured in "},{"kind":"code","text":"`tauri.conf.json`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { appCacheDir } from '@tauri-apps/api/path';\nconst appCacheDirPath = await appCacheDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.2.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":103,"name":"appConfigDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":57,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L57"}],"signatures":[{"id":104,"name":"appConfigDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the suggested directory for your app's config files.\nResolves to "},{"kind":"code","text":"`${configDir}/${bundleIdentifier}`"},{"kind":"text","text":", where "},{"kind":"code","text":"`bundleIdentifier`"},{"kind":"text","text":" is the value ["},{"kind":"code","text":"`tauri.bundle.identifier`"},{"kind":"text","text":"](https://tauri.app/v1/api/config/#bundleconfig.identifier) is configured in "},{"kind":"code","text":"`tauri.conf.json`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { appConfigDir } from '@tauri-apps/api/path';\nconst appConfigDirPath = await appConfigDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.2.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":105,"name":"appDataDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":74,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L74"}],"signatures":[{"id":106,"name":"appDataDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the suggested directory for your app's data files.\nResolves to "},{"kind":"code","text":"`${dataDir}/${bundleIdentifier}`"},{"kind":"text","text":", where "},{"kind":"code","text":"`bundleIdentifier`"},{"kind":"text","text":" is the value ["},{"kind":"code","text":"`tauri.bundle.identifier`"},{"kind":"text","text":"](https://tauri.app/v1/api/config/#bundleconfig.identifier) is configured in "},{"kind":"code","text":"`tauri.conf.json`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { appDataDir } from '@tauri-apps/api/path';\nconst appDataDirPath = await appDataDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.2.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":107,"name":"appLocalDataDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":91,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L91"}],"signatures":[{"id":108,"name":"appLocalDataDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the suggested directory for your app's local data files.\nResolves to "},{"kind":"code","text":"`${localDataDir}/${bundleIdentifier}`"},{"kind":"text","text":", where "},{"kind":"code","text":"`bundleIdentifier`"},{"kind":"text","text":" is the value ["},{"kind":"code","text":"`tauri.bundle.identifier`"},{"kind":"text","text":"](https://tauri.app/v1/api/config/#bundleconfig.identifier) is configured in "},{"kind":"code","text":"`tauri.conf.json`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { appLocalDataDir } from '@tauri-apps/api/path';\nconst appLocalDataDirPath = await appLocalDataDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.2.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":111,"name":"appLogDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":520,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L520"}],"signatures":[{"id":112,"name":"appLogDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the suggested directory for your app's log files.\n\n#### Platform-specific\n\n- **Linux:** Resolves to "},{"kind":"code","text":"`${configDir}/${bundleIdentifier}/logs`"},{"kind":"text","text":".\n- **macOS:** Resolves to "},{"kind":"code","text":"`${homeDir}/Library/Logs/{bundleIdentifier}`"},{"kind":"text","text":"\n- **Windows:** Resolves to "},{"kind":"code","text":"`${configDir}/${bundleIdentifier}/logs`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { appLogDir } from '@tauri-apps/api/path';\nconst appLogDirPath = await appLogDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.2.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":113,"name":"audioDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":130,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L130"}],"signatures":[{"id":114,"name":"audioDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the user's audio directory.\n\n#### Platform-specific\n\n- **Linux:** Resolves to ["},{"kind":"code","text":"`xdg-user-dirs`"},{"kind":"text","text":"](https://www.freedesktop.org/wiki/Software/xdg-user-dirs/)' "},{"kind":"code","text":"`XDG_MUSIC_DIR`"},{"kind":"text","text":".\n- **macOS:** Resolves to "},{"kind":"code","text":"`$HOME/Music`"},{"kind":"text","text":".\n- **Windows:** Resolves to "},{"kind":"code","text":"`{FOLDERID_Music}`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { audioDir } from '@tauri-apps/api/path';\nconst audioDirPath = await audioDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":169,"name":"basename","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":653,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L653"}],"signatures":[{"id":170,"name":"basename","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the last portion of a "},{"kind":"code","text":"`path`"},{"kind":"text","text":". Trailing directory separators are ignored."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { basename, resolveResource } from '@tauri-apps/api/path';\nconst resourcePath = await resolveResource('app.conf');\nconst base = await basename(resourcePath);\nassert(base === 'app.conf');\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"parameters":[{"id":171,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":172,"name":"ext","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An optional file extension to be removed from the returned path."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":115,"name":"cacheDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":152,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L152"}],"signatures":[{"id":116,"name":"cacheDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the user's cache directory.\n\n#### Platform-specific\n\n- **Linux:** Resolves to "},{"kind":"code","text":"`$XDG_CACHE_HOME`"},{"kind":"text","text":" or "},{"kind":"code","text":"`$HOME/.cache`"},{"kind":"text","text":".\n- **macOS:** Resolves to "},{"kind":"code","text":"`$HOME/Library/Caches`"},{"kind":"text","text":".\n- **Windows:** Resolves to "},{"kind":"code","text":"`{FOLDERID_LocalAppData}`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { cacheDir } from '@tauri-apps/api/path';\nconst cacheDirPath = await cacheDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":117,"name":"configDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":174,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L174"}],"signatures":[{"id":118,"name":"configDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the user's config directory.\n\n#### Platform-specific\n\n- **Linux:** Resolves to "},{"kind":"code","text":"`$XDG_CONFIG_HOME`"},{"kind":"text","text":" or "},{"kind":"code","text":"`$HOME/.config`"},{"kind":"text","text":".\n- **macOS:** Resolves to "},{"kind":"code","text":"`$HOME/Library/Application Support`"},{"kind":"text","text":".\n- **Windows:** Resolves to "},{"kind":"code","text":"`{FOLDERID_RoamingAppData}`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { configDir } from '@tauri-apps/api/path';\nconst configDirPath = await configDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":119,"name":"dataDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":196,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L196"}],"signatures":[{"id":120,"name":"dataDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the user's data directory.\n\n#### Platform-specific\n\n- **Linux:** Resolves to "},{"kind":"code","text":"`$XDG_DATA_HOME`"},{"kind":"text","text":" or "},{"kind":"code","text":"`$HOME/.local/share`"},{"kind":"text","text":".\n- **macOS:** Resolves to "},{"kind":"code","text":"`$HOME/Library/Application Support`"},{"kind":"text","text":".\n- **Windows:** Resolves to "},{"kind":"code","text":"`{FOLDERID_RoamingAppData}`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { dataDir } from '@tauri-apps/api/path';\nconst dataDirPath = await dataDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":152,"name":"delimiter","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":560,"character":9,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L560"}],"signatures":[{"id":153,"name":"delimiter","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the platform-specific path segment delimiter:\n- "},{"kind":"code","text":"`;`"},{"kind":"text","text":" on Windows\n- "},{"kind":"code","text":"`:`"},{"kind":"text","text":" on POSIX"}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"2.0.0"}]}]},"type":{"type":"intrinsic","name":"string"}}]},{"id":121,"name":"desktopDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":218,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L218"}],"signatures":[{"id":122,"name":"desktopDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the user's desktop directory.\n\n#### Platform-specific\n\n- **Linux:** Resolves to ["},{"kind":"code","text":"`xdg-user-dirs`"},{"kind":"text","text":"](https://www.freedesktop.org/wiki/Software/xdg-user-dirs/)' "},{"kind":"code","text":"`XDG_DESKTOP_DIR`"},{"kind":"text","text":".\n- **macOS:** Resolves to "},{"kind":"code","text":"`$HOME/Desktop`"},{"kind":"text","text":".\n- **Windows:** Resolves to "},{"kind":"code","text":"`{FOLDERID_Desktop}`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { desktopDir } from '@tauri-apps/api/path';\nconst desktopPath = await desktopDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":163,"name":"dirname","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":619,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L619"}],"signatures":[{"id":164,"name":"dirname","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the directory name of a "},{"kind":"code","text":"`path`"},{"kind":"text","text":". Trailing directory separators are ignored."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { dirname, appDataDir } from '@tauri-apps/api/path';\nconst appDataDirPath = await appDataDir();\nconst dir = await dirname(appDataDirPath);\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"parameters":[{"id":165,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":123,"name":"documentDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":240,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L240"}],"signatures":[{"id":124,"name":"documentDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the user's document directory."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { documentDir } from '@tauri-apps/api/path';\nconst documentDirPath = await documentDir();\n```"},{"kind":"text","text":"\n\n#### Platform-specific\n\n- **Linux:** Resolves to ["},{"kind":"code","text":"`xdg-user-dirs`"},{"kind":"text","text":"](https://www.freedesktop.org/wiki/Software/xdg-user-dirs/)' "},{"kind":"code","text":"`XDG_DOCUMENTS_DIR`"},{"kind":"text","text":".\n- **macOS:** Resolves to "},{"kind":"code","text":"`$HOME/Documents`"},{"kind":"text","text":".\n- **Windows:** Resolves to "},{"kind":"code","text":"`{FOLDERID_Documents}`"},{"kind":"text","text":"."}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":125,"name":"downloadDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":262,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L262"}],"signatures":[{"id":126,"name":"downloadDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the user's download directory.\n\n#### Platform-specific\n\n- **Linux**: Resolves to ["},{"kind":"code","text":"`xdg-user-dirs`"},{"kind":"text","text":"](https://www.freedesktop.org/wiki/Software/xdg-user-dirs/)' "},{"kind":"code","text":"`XDG_DOWNLOAD_DIR`"},{"kind":"text","text":".\n- **macOS**: Resolves to "},{"kind":"code","text":"`$HOME/Downloads`"},{"kind":"text","text":".\n- **Windows**: Resolves to "},{"kind":"code","text":"`{FOLDERID_Downloads}`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { downloadDir } from '@tauri-apps/api/path';\nconst downloadDirPath = await downloadDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":127,"name":"executableDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":284,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L284"}],"signatures":[{"id":128,"name":"executableDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the user's executable directory.\n\n#### Platform-specific\n\n- **Linux:** Resolves to "},{"kind":"code","text":"`$XDG_BIN_HOME/../bin`"},{"kind":"text","text":" or "},{"kind":"code","text":"`$XDG_DATA_HOME/../bin`"},{"kind":"text","text":" or "},{"kind":"code","text":"`$HOME/.local/bin`"},{"kind":"text","text":".\n- **macOS:** Not supported.\n- **Windows:** Not supported."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { executableDir } from '@tauri-apps/api/path';\nconst executableDirPath = await executableDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":166,"name":"extname","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":635,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L635"}],"signatures":[{"id":167,"name":"extname","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the extension of the "},{"kind":"code","text":"`path`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { extname, resolveResource } from '@tauri-apps/api/path';\nconst resourcePath = await resolveResource('app.conf');\nconst ext = await extname(resourcePath);\nassert(ext === 'conf');\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"parameters":[{"id":168,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":129,"name":"fontDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":306,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L306"}],"signatures":[{"id":130,"name":"fontDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the user's font directory.\n\n#### Platform-specific\n\n- **Linux:** Resolves to "},{"kind":"code","text":"`$XDG_DATA_HOME/fonts`"},{"kind":"text","text":" or "},{"kind":"code","text":"`$HOME/.local/share/fonts`"},{"kind":"text","text":".\n- **macOS:** Resolves to "},{"kind":"code","text":"`$HOME/Library/Fonts`"},{"kind":"text","text":".\n- **Windows:** Not supported."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { fontDir } from '@tauri-apps/api/path';\nconst fontDirPath = await fontDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":131,"name":"homeDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":328,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L328"}],"signatures":[{"id":132,"name":"homeDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the user's home directory.\n\n#### Platform-specific\n\n- **Linux:** Resolves to "},{"kind":"code","text":"`$HOME`"},{"kind":"text","text":".\n- **macOS:** Resolves to "},{"kind":"code","text":"`$HOME`"},{"kind":"text","text":".\n- **Windows:** Resolves to "},{"kind":"code","text":"`{FOLDERID_Profile}`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { homeDir } from '@tauri-apps/api/path';\nconst homeDirPath = await homeDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":173,"name":"isAbsolute","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":667,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L667"}],"signatures":[{"id":174,"name":"isAbsolute","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns whether the path is absolute or not."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { isAbsolute } from '@tauri-apps/api/path';\nassert(await isAbsolute('/home/tauri'));\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"parameters":[{"id":175,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":160,"name":"join","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":604,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L604"}],"signatures":[{"id":161,"name":"join","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Joins all given "},{"kind":"code","text":"`path`"},{"kind":"text","text":" segments together using the platform-specific separator as a delimiter, then normalizes the resulting path."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { join, appDataDir } from '@tauri-apps/api/path';\nconst appDataDirPath = await appDataDir();\nconst path = await join(appDataDirPath, 'users', 'tauri', 'avatar.png');\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"parameters":[{"id":162,"name":"paths","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":133,"name":"localDataDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":350,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L350"}],"signatures":[{"id":134,"name":"localDataDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the user's local data directory.\n\n#### Platform-specific\n\n- **Linux:** Resolves to "},{"kind":"code","text":"`$XDG_DATA_HOME`"},{"kind":"text","text":" or "},{"kind":"code","text":"`$HOME/.local/share`"},{"kind":"text","text":".\n- **macOS:** Resolves to "},{"kind":"code","text":"`$HOME/Library/Application Support`"},{"kind":"text","text":".\n- **Windows:** Resolves to "},{"kind":"code","text":"`{FOLDERID_LocalAppData}`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { localDataDir } from '@tauri-apps/api/path';\nconst localDataDirPath = await localDataDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":157,"name":"normalize","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":589,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L589"}],"signatures":[{"id":158,"name":"normalize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Normalizes the given "},{"kind":"code","text":"`path`"},{"kind":"text","text":", resolving "},{"kind":"code","text":"`'..'`"},{"kind":"text","text":" and "},{"kind":"code","text":"`'.'`"},{"kind":"text","text":" segments and resolve symbolic links."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { normalize, appDataDir } from '@tauri-apps/api/path';\nconst appDataDirPath = await appDataDir();\nconst path = await normalize(appDataDirPath, '..', 'users', 'tauri', 'avatar.png');\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"parameters":[{"id":159,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":135,"name":"pictureDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":372,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L372"}],"signatures":[{"id":136,"name":"pictureDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the user's picture directory.\n\n#### Platform-specific\n\n- **Linux:** Resolves to ["},{"kind":"code","text":"`xdg-user-dirs`"},{"kind":"text","text":"](https://www.freedesktop.org/wiki/Software/xdg-user-dirs/)' "},{"kind":"code","text":"`XDG_PICTURES_DIR`"},{"kind":"text","text":".\n- **macOS:** Resolves to "},{"kind":"code","text":"`$HOME/Pictures`"},{"kind":"text","text":".\n- **Windows:** Resolves to "},{"kind":"code","text":"`{FOLDERID_Pictures}`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { pictureDir } from '@tauri-apps/api/path';\nconst pictureDirPath = await pictureDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":137,"name":"publicDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":394,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L394"}],"signatures":[{"id":138,"name":"publicDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the user's public directory.\n\n#### Platform-specific\n\n- **Linux:** Resolves to ["},{"kind":"code","text":"`xdg-user-dirs`"},{"kind":"text","text":"](https://www.freedesktop.org/wiki/Software/xdg-user-dirs/)' "},{"kind":"code","text":"`XDG_PUBLICSHARE_DIR`"},{"kind":"text","text":".\n- **macOS:** Resolves to "},{"kind":"code","text":"`$HOME/Public`"},{"kind":"text","text":".\n- **Windows:** Resolves to "},{"kind":"code","text":"`{FOLDERID_Public}`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { publicDir } from '@tauri-apps/api/path';\nconst publicDirPath = await publicDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":154,"name":"resolve","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":574,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L574"}],"signatures":[{"id":155,"name":"resolve","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves a sequence of "},{"kind":"code","text":"`paths`"},{"kind":"text","text":" or "},{"kind":"code","text":"`path`"},{"kind":"text","text":" segments into an absolute path."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { resolve, appDataDir } from '@tauri-apps/api/path';\nconst appDataDirPath = await appDataDir();\nconst path = await resolve(appDataDirPath, '..', 'users', 'tauri', 'avatar.png');\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"parameters":[{"id":156,"name":"paths","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":141,"name":"resolveResource","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":431,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L431"}],"signatures":[{"id":142,"name":"resolveResource","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Resolve the path to a resource file."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { resolveResource } from '@tauri-apps/api/path';\nconst resourcePath = await resolveResource('script.sh');\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The full path to the resource."}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"parameters":[{"id":143,"name":"resourcePath","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The path to the resource.\nMust follow the same syntax as defined in "},{"kind":"code","text":"`tauri.conf.json > tauri > bundle > resources`"},{"kind":"text","text":", i.e. keeping subfolders and parent dir components ("},{"kind":"code","text":"`../`"},{"kind":"text","text":")."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":139,"name":"resourceDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":411,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L411"}],"signatures":[{"id":140,"name":"resourceDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the application's resource directory.\nTo resolve a resource path, see the [[resolveResource | "},{"kind":"code","text":"`resolveResource API`"},{"kind":"text","text":"]]."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { resourceDir } from '@tauri-apps/api/path';\nconst resourceDirPath = await resourceDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":144,"name":"runtimeDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":454,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L454"}],"signatures":[{"id":145,"name":"runtimeDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the user's runtime directory.\n\n#### Platform-specific\n\n- **Linux:** Resolves to "},{"kind":"code","text":"`$XDG_RUNTIME_DIR`"},{"kind":"text","text":".\n- **macOS:** Not supported.\n- **Windows:** Not supported."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { runtimeDir } from '@tauri-apps/api/path';\nconst runtimeDirPath = await runtimeDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":150,"name":"sep","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":549,"character":9,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L549"}],"signatures":[{"id":151,"name":"sep","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the platform-specific path segment separator:\n- "},{"kind":"code","text":"`\\` on Windows\n- `"},{"kind":"text","text":"/` on POSIX"}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"2.0.0"}]}]},"type":{"type":"intrinsic","name":"string"}}]},{"id":176,"name":"tempDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":536,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L536"}],"signatures":[{"id":177,"name":"tempDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a temporary directory."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { tempDir } from '@tauri-apps/api/path';\nconst temp = await tempDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"2.0.0"}]}]},"parameters":[{"id":178,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":146,"name":"templateDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":476,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L476"}],"signatures":[{"id":147,"name":"templateDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the user's template directory.\n\n#### Platform-specific\n\n- **Linux:** Resolves to ["},{"kind":"code","text":"`xdg-user-dirs`"},{"kind":"text","text":"](https://www.freedesktop.org/wiki/Software/xdg-user-dirs/)' "},{"kind":"code","text":"`XDG_TEMPLATES_DIR`"},{"kind":"text","text":".\n- **macOS:** Not supported.\n- **Windows:** Resolves to "},{"kind":"code","text":"`{FOLDERID_Templates}`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { templateDir } from '@tauri-apps/api/path';\nconst templateDirPath = await templateDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":148,"name":"videoDir","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"path.ts","line":498,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L498"}],"signatures":[{"id":149,"name":"videoDir","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path to the user's video directory.\n\n#### Platform-specific\n\n- **Linux:** Resolves to ["},{"kind":"code","text":"`xdg-user-dirs`"},{"kind":"text","text":"](https://www.freedesktop.org/wiki/Software/xdg-user-dirs/)' "},{"kind":"code","text":"`XDG_VIDEOS_DIR`"},{"kind":"text","text":".\n- **macOS:** Resolves to "},{"kind":"code","text":"`$HOME/Movies`"},{"kind":"text","text":".\n- **Windows:** Resolves to "},{"kind":"code","text":"`{FOLDERID_Videos}`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { videoDir } from '@tauri-apps/api/path';\nconst videoDirPath = await videoDir();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Enumerations","children":[79]},{"title":"Functions","children":[109,103,105,107,111,113,169,115,117,119,152,121,163,123,125,127,166,129,131,173,160,133,157,135,137,154,141,139,144,150,176,146,148]}],"sources":[{"fileName":"path.ts","line":14,"character":0,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/path.ts#L14"}]},{"id":179,"name":"window","kind":2,"kindString":"Module","flags":{},"comment":{"summary":[{"kind":"text","text":"Provides APIs to create windows, communicate with other windows and manipulate the current window.\n\n## Window events\n\nEvents can be listened to using "},{"kind":"inline-tag","tag":"@link","text":"listen","target":213},{"kind":"text","text":":\n"},{"kind":"code","text":"```typescript\nimport { getCurrent } from \"@tauri-apps/api/window\";\ngetCurrent().listen(\"my-window-event\", ({ event, payload }) => { });\n```"}]},"children":[{"id":411,"name":"Effect","kind":8,"kindString":"Enumeration","flags":{},"comment":{"summary":[{"kind":"text","text":"Platform-specific window effects"}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"2.0.0"}]}]},"children":[{"id":433,"name":"Acrylic","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**Windows 10/11**\n\n## Notes\n\nThis effect has bad performance when resizing/dragging the window on Windows 10 v1903+ and Windows 11 build 22000."}]},"sources":[{"fileName":"window.ts","line":1901,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1901"}],"type":{"type":"literal","value":"acrylic"}},{"id":412,"name":"AppearanceBased","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"A default material appropriate for the view's effectiveAppearance.  **macOS 10.14-**"}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"since macOS 10.14. You should instead choose an appropriate semantic material."}]}]},"sources":[{"fileName":"window.ts","line":1801,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1801"}],"type":{"type":"literal","value":"appearanceBased"}},{"id":432,"name":"Blur","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**Windows 7/10/11(22H1) Only**\n\n## Notes\n\nThis effect has bad performance when resizing/dragging the window on Windows 11 build 22621."}]},"sources":[{"fileName":"window.ts","line":1893,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1893"}],"type":{"type":"literal","value":"blur"}},{"id":428,"name":"ContentBackground","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.14+**"}]},"sources":[{"fileName":"window.ts","line":1873,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1873"}],"type":{"type":"literal","value":"contentBackground"}},{"id":414,"name":"Dark","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.14-**"}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"since macOS 10.14. Use a semantic material instead."}]}]},"sources":[{"fileName":"window.ts","line":1813,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1813"}],"type":{"type":"literal","value":"dark"}},{"id":426,"name":"FullScreenUI","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.14+**"}]},"sources":[{"fileName":"window.ts","line":1865,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1865"}],"type":{"type":"literal","value":"fullScreenUI"}},{"id":422,"name":"HeaderView","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.14+**"}]},"sources":[{"fileName":"window.ts","line":1849,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1849"}],"type":{"type":"literal","value":"headerView"}},{"id":425,"name":"HudWindow","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.14+**"}]},"sources":[{"fileName":"window.ts","line":1861,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1861"}],"type":{"type":"literal","value":"hudWindow"}},{"id":413,"name":"Light","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.14-**"}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"since macOS 10.14. Use a semantic material instead."}]}]},"sources":[{"fileName":"window.ts","line":1807,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1807"}],"type":{"type":"literal","value":"light"}},{"id":415,"name":"MediumLight","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.14-**"}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"since macOS 10.14. Use a semantic material instead."}]}]},"sources":[{"fileName":"window.ts","line":1819,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1819"}],"type":{"type":"literal","value":"mediumLight"}},{"id":419,"name":"Menu","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.11+**"}]},"sources":[{"fileName":"window.ts","line":1837,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1837"}],"type":{"type":"literal","value":"menu"}},{"id":431,"name":"Mica","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**Windows 11 Only**"}]},"sources":[{"fileName":"window.ts","line":1885,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1885"}],"type":{"type":"literal","value":"mica"}},{"id":420,"name":"Popover","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.11+**"}]},"sources":[{"fileName":"window.ts","line":1841,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1841"}],"type":{"type":"literal","value":"popover"}},{"id":418,"name":"Selection","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.10+**"}]},"sources":[{"fileName":"window.ts","line":1833,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1833"}],"type":{"type":"literal","value":"selection"}},{"id":423,"name":"Sheet","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.14+**"}]},"sources":[{"fileName":"window.ts","line":1853,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1853"}],"type":{"type":"literal","value":"sheet"}},{"id":421,"name":"Sidebar","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.11+**"}]},"sources":[{"fileName":"window.ts","line":1845,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1845"}],"type":{"type":"literal","value":"sidebar"}},{"id":434,"name":"Tabbed","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"Tabbed effect that matches the system dark perefence **Windows 11 Only**"}]},"sources":[{"fileName":"window.ts","line":1905,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1905"}],"type":{"type":"literal","value":"tabbed"}},{"id":435,"name":"TabbedDark","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"Tabbed effect with dark mode but only if dark mode is enabled on the system **Windows 11 Only**"}]},"sources":[{"fileName":"window.ts","line":1909,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1909"}],"type":{"type":"literal","value":"tabbedDark"}},{"id":436,"name":"TabbedLight","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"Tabbed effect with light mode **Windows 11 Only**"}]},"sources":[{"fileName":"window.ts","line":1913,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1913"}],"type":{"type":"literal","value":"tabbedLight"}},{"id":417,"name":"Titlebar","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.10+**"}]},"sources":[{"fileName":"window.ts","line":1829,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1829"}],"type":{"type":"literal","value":"titlebar"}},{"id":427,"name":"Tooltip","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.14+**"}]},"sources":[{"fileName":"window.ts","line":1869,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1869"}],"type":{"type":"literal","value":"tooltip"}},{"id":416,"name":"UltraDark","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.14-**"}],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"since macOS 10.14. Use a semantic material instead."}]}]},"sources":[{"fileName":"window.ts","line":1825,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1825"}],"type":{"type":"literal","value":"ultraDark"}},{"id":430,"name":"UnderPageBackground","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.14+**"}]},"sources":[{"fileName":"window.ts","line":1881,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1881"}],"type":{"type":"literal","value":"underPageBackground"}},{"id":429,"name":"UnderWindowBackground","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.14+**"}]},"sources":[{"fileName":"window.ts","line":1877,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1877"}],"type":{"type":"literal","value":"underWindowBackground"}},{"id":424,"name":"WindowBackground","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"**macOS 10.14+**"}]},"sources":[{"fileName":"window.ts","line":1857,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1857"}],"type":{"type":"literal","value":"windowBackground"}}],"groups":[{"title":"Enumeration Members","children":[433,412,432,428,414,426,422,425,413,415,419,431,420,418,423,421,434,435,436,417,427,416,430,429,424]}],"sources":[{"fileName":"window.ts","line":1795,"character":5,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1795"}]},{"id":437,"name":"EffectState","kind":8,"kindString":"Enumeration","flags":{},"comment":{"summary":[{"kind":"text","text":"Window effect state **macOS only**"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://developer.apple.com/documentation/appkit/nsvisualeffectview/state"}]},{"tag":"@since","content":[{"kind":"text","text":"2.0.0"}]}]},"children":[{"id":439,"name":"Active","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"Make window effect state always active **macOS only**"}]},"sources":[{"fileName":"window.ts","line":1931,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1931"}],"type":{"type":"literal","value":"active"}},{"id":438,"name":"FollowsWindowActiveState","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"Make window effect state follow the window's active state **macOS only**"}]},"sources":[{"fileName":"window.ts","line":1927,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1927"}],"type":{"type":"literal","value":"followsWindowActiveState"}},{"id":440,"name":"Inactive","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"Make window effect state always inactive **macOS only**"}]},"sources":[{"fileName":"window.ts","line":1935,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1935"}],"type":{"type":"literal","value":"inactive"}}],"groups":[{"title":"Enumeration Members","children":[439,438,440]}],"sources":[{"fileName":"window.ts","line":1923,"character":5,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1923"}]},{"id":186,"name":"ProgressBarStatus","kind":8,"kindString":"Enumeration","flags":{},"children":[{"id":191,"name":"Error","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"Error state. **Treated as Normal on linux**"}]},"sources":[{"fileName":"window.ts","line":171,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L171"}],"type":{"type":"literal","value":"error"}},{"id":189,"name":"Indeterminate","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"Indeterminate state. **Treated as Normal on Linux and macOS**"}]},"sources":[{"fileName":"window.ts","line":163,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L163"}],"type":{"type":"literal","value":"indeterminate"}},{"id":187,"name":"None","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"Hide progress bar."}]},"sources":[{"fileName":"window.ts","line":155,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L155"}],"type":{"type":"literal","value":"none"}},{"id":188,"name":"Normal","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"Normal state."}]},"sources":[{"fileName":"window.ts","line":159,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L159"}],"type":{"type":"literal","value":"normal"}},{"id":190,"name":"Paused","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"Paused state. **Treated as Normal on Linux**"}]},"sources":[{"fileName":"window.ts","line":167,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L167"}],"type":{"type":"literal","value":"paused"}}],"groups":[{"title":"Enumeration Members","children":[191,189,187,188,190]}],"sources":[{"fileName":"window.ts","line":151,"character":12,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L151"}]},{"id":408,"name":"UserAttentionType","kind":8,"kindString":"Enumeration","flags":{},"comment":{"summary":[{"kind":"text","text":"Attention type to request on a window."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"children":[{"id":409,"name":"Critical","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"#### Platform-specific\n- **macOS:** Bounces the dock icon until the application is in focus.\n- **Windows:** Flashes both the window and the taskbar button until the application is in focus."}]},"sources":[{"fileName":"window.ts","line":77,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L77"}],"type":{"type":"literal","value":1}},{"id":410,"name":"Informational","kind":16,"kindString":"Enumeration Member","flags":{},"comment":{"summary":[{"kind":"text","text":"#### Platform-specific\n- **macOS:** Bounces the dock icon once.\n- **Windows:** Flashes the taskbar button until the application is in focus."}]},"sources":[{"fileName":"window.ts","line":83,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L83"}],"type":{"type":"literal","value":2}}],"groups":[{"title":"Enumeration Members","children":[409,410]}],"sources":[{"fileName":"window.ts","line":71,"character":5,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L71"}]},{"id":392,"name":"CloseRequestedEvent","kind":128,"kindString":"Class","flags":{},"children":[{"id":393,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"window.ts","line":95,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L95"}],"signatures":[{"id":394,"name":"new CloseRequestedEvent","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":395,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":13,"typeArguments":[{"type":"literal","value":null}],"name":"Event"}}],"type":{"type":"reference","id":392,"name":"CloseRequestedEvent"}}]},{"id":396,"name":"event","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Event name"}]},"sources":[{"fileName":"window.ts","line":88,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L88"}],"type":{"type":"reference","id":27,"name":"EventName"}},{"id":398,"name":"id","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Event identifier used to unlisten"}]},"sources":[{"fileName":"window.ts","line":92,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L92"}],"type":{"type":"intrinsic","name":"number"}},{"id":397,"name":"windowLabel","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The label of the window that emitted this event."}]},"sources":[{"fileName":"window.ts","line":90,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L90"}],"type":{"type":"intrinsic","name":"string"}},{"id":402,"name":"isPreventDefault","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":105,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L105"}],"signatures":[{"id":403,"name":"isPreventDefault","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"boolean"}}]},{"id":400,"name":"preventDefault","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":101,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L101"}],"signatures":[{"id":401,"name":"preventDefault","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Constructors","children":[393]},{"title":"Properties","children":[396,398,397]},{"title":"Methods","children":[402,400]}],"sources":[{"fileName":"window.ts","line":86,"character":6,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L86"}]},{"id":521,"name":"LogicalPosition","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"A position represented in logical pixels."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"2.0.0"}]}]},"children":[{"id":522,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"dpi.ts","line":62,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L62"}],"signatures":[{"id":523,"name":"new LogicalPosition","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":524,"name":"x","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":525,"name":"y","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":521,"name":"LogicalPosition"}}]},{"id":526,"name":"type","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"dpi.ts","line":58,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L58"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"'Logical'"},{"id":527,"name":"x","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"dpi.ts","line":59,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L59"}],"type":{"type":"intrinsic","name":"number"}},{"id":528,"name":"y","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"dpi.ts","line":60,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L60"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Constructors","children":[522]},{"title":"Properties","children":[526,527,528]}],"sources":[{"fileName":"dpi.ts","line":57,"character":6,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L57"}]},{"id":502,"name":"LogicalSize","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"A size represented in logical pixels."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"2.0.0"}]}]},"children":[{"id":503,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"dpi.ts","line":15,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L15"}],"signatures":[{"id":504,"name":"new LogicalSize","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":505,"name":"width","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":506,"name":"height","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":502,"name":"LogicalSize"}}]},{"id":509,"name":"height","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"dpi.ts","line":13,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L13"}],"type":{"type":"intrinsic","name":"number"}},{"id":507,"name":"type","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"dpi.ts","line":11,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L11"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"'Logical'"},{"id":508,"name":"width","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"dpi.ts","line":12,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L12"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Constructors","children":[503]},{"title":"Properties","children":[509,507,508]}],"sources":[{"fileName":"dpi.ts","line":10,"character":6,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L10"}]},{"id":529,"name":"PhysicalPosition","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"A position represented in physical pixels."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"2.0.0"}]}]},"children":[{"id":530,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"dpi.ts","line":78,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L78"}],"signatures":[{"id":531,"name":"new PhysicalPosition","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":532,"name":"x","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":533,"name":"y","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":529,"name":"PhysicalPosition"}}]},{"id":534,"name":"type","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"dpi.ts","line":74,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L74"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"'Physical'"},{"id":535,"name":"x","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"dpi.ts","line":75,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L75"}],"type":{"type":"intrinsic","name":"number"}},{"id":536,"name":"y","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"dpi.ts","line":76,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L76"}],"type":{"type":"intrinsic","name":"number"}},{"id":537,"name":"toLogical","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"dpi.ts","line":94,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L94"}],"signatures":[{"id":538,"name":"toLogical","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the physical position to a logical one."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst appWindow = getCurrent();\nconst factor = await appWindow.scaleFactor();\nconst position = await appWindow.innerPosition();\nconst logical = position.toLogical(factor);\n```"}]}]},"parameters":[{"id":539,"name":"scaleFactor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":521,"name":"LogicalPosition"}}]}],"groups":[{"title":"Constructors","children":[530]},{"title":"Properties","children":[534,535,536]},{"title":"Methods","children":[537]}],"sources":[{"fileName":"dpi.ts","line":73,"character":6,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L73"}]},{"id":510,"name":"PhysicalSize","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"A size represented in physical pixels."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"2.0.0"}]}]},"children":[{"id":511,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"dpi.ts","line":31,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L31"}],"signatures":[{"id":512,"name":"new PhysicalSize","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":513,"name":"width","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":514,"name":"height","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":510,"name":"PhysicalSize"}}]},{"id":517,"name":"height","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"dpi.ts","line":29,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L29"}],"type":{"type":"intrinsic","name":"number"}},{"id":515,"name":"type","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"dpi.ts","line":27,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L27"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"'Physical'"},{"id":516,"name":"width","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"dpi.ts","line":28,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L28"}],"type":{"type":"intrinsic","name":"number"}},{"id":518,"name":"toLogical","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"dpi.ts","line":47,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L47"}],"signatures":[{"id":519,"name":"toLogical","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Converts the physical size to a logical one."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst appWindow = getCurrent();\nconst factor = await appWindow.scaleFactor();\nconst size = await appWindow.innerSize();\nconst logical = size.toLogical(factor);\n```"}]}]},"parameters":[{"id":520,"name":"scaleFactor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":502,"name":"LogicalSize"}}]}],"groups":[{"title":"Constructors","children":[511]},{"title":"Properties","children":[517,515,516]},{"title":"Methods","children":[518]}],"sources":[{"fileName":"dpi.ts","line":26,"character":6,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/dpi.ts#L26"}]},{"id":197,"name":"Window","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Create new webview window or get a handle to an existing one.\n\nWindows are identified by a *label*  a unique identifier that can be used to reference it later.\nIt may only contain alphanumeric characters "},{"kind":"code","text":"`a-zA-Z`"},{"kind":"text","text":" plus the following special characters "},{"kind":"code","text":"`-`"},{"kind":"text","text":", "},{"kind":"code","text":"`/`"},{"kind":"text","text":", "},{"kind":"code","text":"`:`"},{"kind":"text","text":" and "},{"kind":"code","text":"`_`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\n// loading embedded asset:\nconst appWindow = new Window('theUniqueLabel', {\n  url: 'path/to/page.html'\n});\n// alternatively, load a remote URL:\nconst appWindow = new Window('theUniqueLabel', {\n  url: 'https://github.com/tauri-apps/tauri'\n});\n\nappWindow.once('tauri://created', function () {\n // window successfully created\n});\nappWindow.once('tauri://error', function (e) {\n // an error happened creating the window\n});\n\n// emit an event to the backend\nawait appWindow.emit(\"some event\", \"data\");\n// listen to an event from the backend\nconst unlisten = await appWindow.listen(\"event name\", e => {});\nunlisten();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"2.0.0"}]}]},"children":[{"id":207,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"window.ts","line":281,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L281"}],"signatures":[{"id":208,"name":"new Window","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a new Window."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { Window } from '@tauri-apps/api/window';\nconst appWindow = new Window('my-label', {\n  url: 'https://github.com/tauri-apps/tauri'\n});\nappWindow.once('tauri://created', function () {\n // window successfully created\n});\nappWindow.once('tauri://error', function (e) {\n // an error happened creating the window\n});\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The "},{"kind":"inline-tag","tag":"@link","text":"Window","target":197},{"kind":"text","text":" instance to communicate with the webview."}]}]},"parameters":[{"id":209,"name":"label","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The unique webview window label. Must be alphanumeric: "},{"kind":"code","text":"`a-zA-Z-/:_`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}},{"id":210,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":466,"name":"WindowOptions"},"defaultValue":"{}"}],"type":{"type":"reference","id":197,"name":"Window"}}]},{"id":211,"name":"label","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The window label. It is a unique identifier for the window, can be used to reference it later."}]},"sources":[{"fileName":"window.ts","line":257,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L257"}],"type":{"type":"intrinsic","name":"string"}},{"id":212,"name":"listeners","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Local event listeners."}]},"sources":[{"fileName":"window.ts","line":260,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L260"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"reference","id":19,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"EventCallback"}}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}},{"id":266,"name":"center","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":760,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L760"}],"signatures":[{"id":267,"name":"center","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Centers the window."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().center();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":311,"name":"clearEffects","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1093,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1093"}],"signatures":[{"id":312,"name":"clearEffects","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Clear any applied effects if possible."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":300,"name":"close","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1030,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1030"}],"signatures":[{"id":301,"name":"close","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Closes the window."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().close();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":223,"name":"emit","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":425,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L425"}],"signatures":[{"id":224,"name":"emit","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Emits an event to the backend, tied to the webview window."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().emit('window-loaded', { loggedIn: true, token: 'authToken' });\n```"}]}]},"parameters":[{"id":225,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Event name. Must include only alphanumeric characters, "},{"kind":"code","text":"`-`"},{"kind":"text","text":", "},{"kind":"code","text":"`/`"},{"kind":"text","text":", "},{"kind":"code","text":"`:`"},{"kind":"text","text":" and "},{"kind":"code","text":"`_`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}},{"id":226,"name":"payload","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Event payload."}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":298,"name":"hide","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1014,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1014"}],"signatures":[{"id":299,"name":"hide","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Sets the window visibility to false."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().hide();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":234,"name":"innerPosition","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":478,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L478"}],"signatures":[{"id":235,"name":"innerPosition","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"The position of the top-left hand corner of the window's client area relative to the top-left hand corner of the desktop."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst position = await getCurrent().innerPosition();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The window's inner position."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":529,"name":"PhysicalPosition"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":238,"name":"innerSize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":511,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L511"}],"signatures":[{"id":239,"name":"innerSize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"The physical size of the window's client area.\nThe client area is the content of the window, excluding the title bar and borders."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst size = await getCurrent().innerSize();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The window's inner size."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":510,"name":"PhysicalSize"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":258,"name":"isClosable","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":691,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L691"}],"signatures":[{"id":259,"name":"isClosable","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the window’s native close button state.\n\n#### Platform-specific\n\n- **iOS / Android:** Unsupported."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst closable = await getCurrent().isClosable();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"Whether the window's native close button is enabled or not."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":250,"name":"isDecorated","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":612,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L612"}],"signatures":[{"id":251,"name":"isDecorated","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the window's current decorated state."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst decorated = await getCurrent().isDecorated();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"Whether the window is decorated or not."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":248,"name":"isFocused","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":596,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L596"}],"signatures":[{"id":249,"name":"isFocused","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the window's current focus state."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst focused = await getCurrent().isFocused();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"Whether the window is focused or not."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":242,"name":"isFullscreen","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":550,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L550"}],"signatures":[{"id":243,"name":"isFullscreen","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the window's current fullscreen state."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst fullscreen = await getCurrent().isFullscreen();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"Whether the window is in fullscreen mode or not."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":254,"name":"isMaximizable","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":649,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L649"}],"signatures":[{"id":255,"name":"isMaximizable","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the window’s native maximize button state.\n\n#### Platform-specific\n\n- **Linux / iOS / Android:** Unsupported."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst maximizable = await getCurrent().isMaximizable();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"Whether the window's native maximize button is enabled or not."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":246,"name":"isMaximized","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":580,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L580"}],"signatures":[{"id":247,"name":"isMaximized","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the window's current maximized state."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst maximized = await getCurrent().isMaximized();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"Whether the window is maximized or not."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":256,"name":"isMinimizable","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":670,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L670"}],"signatures":[{"id":257,"name":"isMinimizable","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the window’s native minimize button state.\n\n#### Platform-specific\n\n- **Linux / iOS / Android:** Unsupported."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst minimizable = await getCurrent().isMinimizable();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"Whether the window's native minimize button is enabled or not."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":244,"name":"isMinimized","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":564,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L564"}],"signatures":[{"id":245,"name":"isMinimized","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the window's current minimized state."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst minimized = await getCurrent().isMinimized();\n```"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":252,"name":"isResizable","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":628,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L628"}],"signatures":[{"id":253,"name":"isResizable","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the window's current resizable state."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst resizable = await getCurrent().isResizable();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"Whether the window is resizable or not."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":260,"name":"isVisible","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":707,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L707"}],"signatures":[{"id":261,"name":"isVisible","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the window's current visible state."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst visible = await getCurrent().isVisible();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"Whether the window is visible or not."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":213,"name":"listen","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":370,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L370"}],"signatures":[{"id":214,"name":"listen","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listen to an event emitted by the backend that is tied to the webview window."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst unlisten = await getCurrent().listen<string>('state-changed', (event) => {\n  console.log(`Got error: ${payload}`);\n});\n\n// you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\nunlisten();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise resolving to a function to unlisten to the event.\nNote that removing the listener is required if your listener goes out of scope e.g. the component is unmounted."}]}]},"typeParameter":[{"id":215,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":216,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Event name. Must include only alphanumeric characters, "},{"kind":"code","text":"`-`"},{"kind":"text","text":", "},{"kind":"code","text":"`/`"},{"kind":"text","text":", "},{"kind":"code","text":"`:`"},{"kind":"text","text":" and "},{"kind":"code","text":"`_`"},{"kind":"text","text":"."}]},"type":{"type":"reference","id":27,"name":"EventName"}},{"id":217,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Event handler."}]},"type":{"type":"reference","id":19,"typeArguments":[{"type":"reference","id":215,"name":"T"}],"name":"EventCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":24,"name":"UnlistenFn"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":286,"name":"maximize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":918,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L918"}],"signatures":[{"id":287,"name":"maximize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Maximizes the window."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().maximize();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":292,"name":"minimize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":966,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L966"}],"signatures":[{"id":293,"name":"minimize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Minimizes the window."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().minimize();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":371,"name":"onCloseRequested","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1604,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1604"}],"signatures":[{"id":372,"name":"onCloseRequested","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listen to window close requested. Emitted when the user requests to closes the window."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from \"@tauri-apps/api/window\";\nimport { confirm } from '@tauri-apps/api/dialog';\nconst unlisten = await getCurrent().onCloseRequested(async (event) => {\n  const confirmed = await confirm('Are you sure?');\n  if (!confirmed) {\n    // user did not confirm closing the window; let's prevent it\n    event.preventDefault();\n  }\n});\n\n// you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\nunlisten();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise resolving to a function to unlisten to the event.\nNote that removing the listener is required if your listener goes out of scope e.g. the component is unmounted."}]}]},"parameters":[{"id":373,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":374,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"window.ts","line":1605,"character":13,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1605"}],"signatures":[{"id":375,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":376,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":392,"name":"CloseRequestedEvent"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":24,"name":"UnlistenFn"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":386,"name":"onFileDropEvent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1730,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1730"}],"signatures":[{"id":387,"name":"onFileDropEvent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listen to a file drop event.\nThe listener is triggered when the user hovers the selected files on the window,\ndrops the files or cancels the operation."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from \"@tauri-apps/api/window\";\nconst unlisten = await getCurrent().onFileDropEvent((event) => {\n if (event.payload.type === 'hover') {\n   console.log('User hovering', event.payload.paths);\n } else if (event.payload.type === 'drop') {\n   console.log('User dropped', event.payload.paths);\n } else {\n   console.log('File drop cancelled');\n }\n});\n\n// you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\nunlisten();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise resolving to a function to unlisten to the event.\nNote that removing the listener is required if your listener goes out of scope e.g. the component is unmounted."}]}]},"parameters":[{"id":388,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":19,"typeArguments":[{"type":"reference","id":457,"name":"FileDropEvent"}],"name":"EventCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":24,"name":"UnlistenFn"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":377,"name":"onFocusChanged","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1635,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1635"}],"signatures":[{"id":378,"name":"onFocusChanged","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listen to window focus change."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from \"@tauri-apps/api/window\";\nconst unlisten = await getCurrent().onFocusChanged(({ payload: focused }) => {\n console.log('Focus changed, window is focused? ' + focused);\n});\n\n// you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\nunlisten();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise resolving to a function to unlisten to the event.\nNote that removing the listener is required if your listener goes out of scope e.g. the component is unmounted."}]}]},"parameters":[{"id":379,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":19,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"EventCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":24,"name":"UnlistenFn"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":383,"name":"onMenuClicked","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1701,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1701"}],"signatures":[{"id":384,"name":"onMenuClicked","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listen to the window menu item click. The payload is the item id."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from \"@tauri-apps/api/window\";\nconst unlisten = await getCurrent().onMenuClicked(({ payload: menuId }) => {\n console.log('Menu clicked: ' + menuId);\n});\n\n// you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\nunlisten();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise resolving to a function to unlisten to the event.\nNote that removing the listener is required if your listener goes out of scope e.g. the component is unmounted."}]}]},"parameters":[{"id":385,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":19,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"EventCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":24,"name":"UnlistenFn"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":368,"name":"onMoved","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1574,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1574"}],"signatures":[{"id":369,"name":"onMoved","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listen to window move."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from \"@tauri-apps/api/window\";\nconst unlisten = await getCurrent().onMoved(({ payload: position }) => {\n console.log('Window moved', position);\n});\n\n// you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\nunlisten();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise resolving to a function to unlisten to the event.\nNote that removing the listener is required if your listener goes out of scope e.g. the component is unmounted."}]}]},"parameters":[{"id":370,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":19,"typeArguments":[{"type":"reference","id":529,"name":"PhysicalPosition"}],"name":"EventCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":24,"name":"UnlistenFn"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":365,"name":"onResized","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1550,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1550"}],"signatures":[{"id":366,"name":"onResized","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listen to window resize."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from \"@tauri-apps/api/window\";\nconst unlisten = await getCurrent().onResized(({ payload: size }) => {\n console.log('Window resized', size);\n});\n\n// you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\nunlisten();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise resolving to a function to unlisten to the event.\nNote that removing the listener is required if your listener goes out of scope e.g. the component is unmounted."}]}]},"parameters":[{"id":367,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":19,"typeArguments":[{"type":"reference","id":510,"name":"PhysicalSize"}],"name":"EventCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":24,"name":"UnlistenFn"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":380,"name":"onScaleChanged","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1675,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1675"}],"signatures":[{"id":381,"name":"onScaleChanged","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listen to window scale change. Emitted when the window's scale factor has changed.\nThe following user actions can cause DPI changes:\n- Changing the display's resolution.\n- Changing the display's scale factor (e.g. in Control Panel on Windows).\n- Moving the window to a display with a different scale factor."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from \"@tauri-apps/api/window\";\nconst unlisten = await getCurrent().onScaleChanged(({ payload }) => {\n console.log('Scale changed', payload.scaleFactor, payload.size);\n});\n\n// you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\nunlisten();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise resolving to a function to unlisten to the event.\nNote that removing the listener is required if your listener goes out of scope e.g. the component is unmounted."}]}]},"parameters":[{"id":382,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":19,"typeArguments":[{"type":"reference","id":454,"name":"ScaleFactorChanged"}],"name":"EventCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":24,"name":"UnlistenFn"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":389,"name":"onThemeChanged","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1778,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1778"}],"signatures":[{"id":390,"name":"onThemeChanged","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listen to the system theme change."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from \"@tauri-apps/api/window\";\nconst unlisten = await getCurrent().onThemeChanged(({ payload: theme }) => {\n console.log('New theme: ' + theme);\n});\n\n// you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\nunlisten();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise resolving to a function to unlisten to the event.\nNote that removing the listener is required if your listener goes out of scope e.g. the component is unmounted."}]}]},"parameters":[{"id":391,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":19,"typeArguments":[{"type":"reference","id":452,"name":"Theme"}],"name":"EventCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":24,"name":"UnlistenFn"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":218,"name":"once","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":403,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L403"}],"signatures":[{"id":219,"name":"once","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Listen to an one-off event emitted by the backend that is tied to the webview window."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst unlisten = await getCurrent().once<null>('initialized', (event) => {\n  console.log(`Window initialized!`);\n});\n\n// you need to call unlisten if your handler goes out of scope e.g. the component is unmounted\nunlisten();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise resolving to a function to unlisten to the event.\nNote that removing the listener is required if your listener goes out of scope e.g. the component is unmounted."}]}]},"typeParameter":[{"id":220,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":221,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Event name. Must include only alphanumeric characters, "},{"kind":"code","text":"`-`"},{"kind":"text","text":", "},{"kind":"code","text":"`/`"},{"kind":"text","text":", "},{"kind":"code","text":"`:`"},{"kind":"text","text":" and "},{"kind":"code","text":"`_`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}},{"id":222,"name":"handler","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Event handler."}]},"type":{"type":"reference","id":19,"typeArguments":[{"type":"reference","id":220,"name":"T"}],"name":"EventCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":24,"name":"UnlistenFn"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":236,"name":"outerPosition","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":494,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L494"}],"signatures":[{"id":237,"name":"outerPosition","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"The position of the top-left hand corner of the window relative to the top-left hand corner of the desktop."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst position = await getCurrent().outerPosition();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The window's outer position."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":529,"name":"PhysicalPosition"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":240,"name":"outerSize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":531,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L531"}],"signatures":[{"id":241,"name":"outerSize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"The physical size of the entire window.\nThese dimensions include the title bar and borders. If you don't want that (and you usually don't), use inner_size instead."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst size = await getCurrent().outerSize();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The window's outer size."}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":510,"name":"PhysicalSize"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":268,"name":"requestUserAttention","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":786,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L786"}],"signatures":[{"id":269,"name":"requestUserAttention","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Requests user attention to the window, this has no effect if the application\nis already focused. How requesting for user attention manifests is platform dependent,\nsee "},{"kind":"code","text":"`UserAttentionType`"},{"kind":"text","text":" for details.\n\nProviding "},{"kind":"code","text":"`null`"},{"kind":"text","text":" will unset the request for user attention. Unsetting the request for\nuser attention might not be done automatically by the WM when the window receives input.\n\n#### Platform-specific\n\n- **macOS:** "},{"kind":"code","text":"`null`"},{"kind":"text","text":" has no effect.\n- **Linux:** Urgency levels have the same effect."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().requestUserAttention();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":270,"name":"requestType","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":408,"name":"UserAttentionType"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":232,"name":"scaleFactor","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":462,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L462"}],"signatures":[{"id":233,"name":"scaleFactor","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"The scale factor that can be used to map physical pixels to logical pixels."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst factor = await getCurrent().scaleFactor();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The window's monitor scale factor."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":316,"name":"setAlwaysOnBottom","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1129,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1129"}],"signatures":[{"id":317,"name":"setAlwaysOnBottom","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Whether the window should always be below other windows."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setAlwaysOnBottom(true);\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":318,"name":"alwaysOnBottom","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Whether the window should always be below other windows or not."}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":313,"name":"setAlwaysOnTop","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1111,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1111"}],"signatures":[{"id":314,"name":"setAlwaysOnTop","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Whether the window should always be on top of other windows."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setAlwaysOnTop(true);\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":315,"name":"alwaysOnTop","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Whether the window should always be on top of other windows or not."}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":280,"name":"setClosable","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":883,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L883"}],"signatures":[{"id":281,"name":"setClosable","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Sets whether the window's native close button is enabled or not.\n\n#### Platform-specific\n\n- **Linux:** GTK+ will do its best to convince the window manager not to show a close button. Depending on the system, this function may not have any effect when called on a window that is already visible\n- **iOS / Android:** Unsupported."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setClosable(false);\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":282,"name":"closable","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":319,"name":"setContentProtected","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1146,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1146"}],"signatures":[{"id":320,"name":"setContentProtected","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Prevents the window contents from being captured by other apps."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setContentProtected(true);\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":321,"name":"protected_","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":345,"name":"setCursorGrab","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1386,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1386"}],"signatures":[{"id":346,"name":"setCursorGrab","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Grabs the cursor, preventing it from leaving the window.\n\nThere's no guarantee that the cursor will be hidden. You should\nhide it by yourself if you want so.\n\n#### Platform-specific\n\n- **Linux:** Unsupported.\n- **macOS:** This locks the cursor in a fixed location, which looks visually awkward."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setCursorGrab(true);\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":347,"name":"grab","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"code","text":"`true`"},{"kind":"text","text":" to grab the cursor icon, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" to release it."}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":351,"name":"setCursorIcon","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1428,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1428"}],"signatures":[{"id":352,"name":"setCursorIcon","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Modifies the cursor icon of the window."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setCursorIcon('help');\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":353,"name":"icon","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The new cursor icon."}]},"type":{"type":"reference","id":185,"name":"CursorIcon"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":354,"name":"setCursorPosition","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1446,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1446"}],"signatures":[{"id":355,"name":"setCursorPosition","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Changes the position of the cursor in window coordinates."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent, LogicalPosition } from '@tauri-apps/api/window';\nawait getCurrent().setCursorPosition(new LogicalPosition(600, 300));\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":356,"name":"position","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The new cursor position."}]},"type":{"type":"union","types":[{"type":"reference","id":521,"name":"LogicalPosition"},{"type":"reference","id":529,"name":"PhysicalPosition"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":348,"name":"setCursorVisible","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1410,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1410"}],"signatures":[{"id":349,"name":"setCursorVisible","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Modifies the cursor's visibility.\n\n#### Platform-specific\n\n- **Windows:** The cursor is only hidden within the confines of the window.\n- **macOS:** The cursor is hidden as long as the window has input focus, even if the cursor is\n  outside of the window."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setCursorVisible(false);\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":350,"name":"visible","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`false`"},{"kind":"text","text":", this will hide the cursor. If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", this will show the cursor."}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":302,"name":"setDecorations","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1047,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1047"}],"signatures":[{"id":303,"name":"setDecorations","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Whether the window should have borders and bars."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setDecorations(false);\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":304,"name":"decorations","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Whether the window should have borders and bars."}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":308,"name":"setEffects","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1083,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1083"}],"signatures":[{"id":309,"name":"setEffects","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Set window effects."}]},"parameters":[{"id":310,"name":"effects","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":447,"name":"Effects"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":337,"name":"setFocus","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1314,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1314"}],"signatures":[{"id":338,"name":"setFocus","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Bring the window to front and focus."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setFocus();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":334,"name":"setFullscreen","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1297,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1297"}],"signatures":[{"id":335,"name":"setFullscreen","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Sets the window fullscreen state."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setFullscreen(true);\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":336,"name":"fullscreen","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Whether the window should go to fullscreen or not."}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":339,"name":"setIcon","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1338,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1338"}],"signatures":[{"id":340,"name":"setIcon","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Sets the window icon."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setIcon('/tauri/awesome.png');\n```"},{"kind":"text","text":"\n\nNote that you need the "},{"kind":"code","text":"`icon-ico`"},{"kind":"text","text":" or "},{"kind":"code","text":"`icon-png`"},{"kind":"text","text":" Cargo features to use this API.\nTo enable it, change your Cargo.toml file:\n"},{"kind":"code","text":"```toml\n[dependencies]\ntauri = { version = \"...\", features = [\"...\", \"icon-png\"] }\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":341,"name":"icon","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Icon bytes or path to the icon file."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Uint8Array","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array","qualifiedName":"Uint8Array","package":"typescript"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":357,"name":"setIgnoreCursorEvents","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1482,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1482"}],"signatures":[{"id":358,"name":"setIgnoreCursorEvents","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Changes the cursor events behavior."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setIgnoreCursorEvents(true);\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":359,"name":"ignore","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"code","text":"`true`"},{"kind":"text","text":" to ignore the cursor events; "},{"kind":"code","text":"`false`"},{"kind":"text","text":" to process them as usual."}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":328,"name":"setMaxSize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1228,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1228"}],"signatures":[{"id":329,"name":"setMaxSize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Sets the window maximum inner size. If the "},{"kind":"code","text":"`size`"},{"kind":"text","text":" argument is undefined, the constraint is unset."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent, LogicalSize } from '@tauri-apps/api/window';\nawait getCurrent().setMaxSize(new LogicalSize(600, 500));\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":330,"name":"size","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The logical or physical inner size, or "},{"kind":"code","text":"`null`"},{"kind":"text","text":" to unset the constraint."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"literal","value":null},{"type":"reference","id":502,"name":"LogicalSize"},{"type":"reference","id":510,"name":"PhysicalSize"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":274,"name":"setMaximizable","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":838,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L838"}],"signatures":[{"id":275,"name":"setMaximizable","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Sets whether the window's native maximize button is enabled or not.\nIf resizable is set to false, this setting is ignored.\n\n#### Platform-specific\n\n- **macOS:** Disables the \"zoom\" button in the window titlebar, which is also used to enter fullscreen mode.\n- **Linux / iOS / Android:** Unsupported."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setMaximizable(false);\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":276,"name":"maximizable","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":325,"name":"setMinSize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1194,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1194"}],"signatures":[{"id":326,"name":"setMinSize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Sets the window minimum inner size. If the "},{"kind":"code","text":"`size`"},{"kind":"text","text":" argument is not provided, the constraint is unset."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent, PhysicalSize } from '@tauri-apps/api/window';\nawait getCurrent().setMinSize(new PhysicalSize(600, 500));\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":327,"name":"size","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The logical or physical inner size, or "},{"kind":"code","text":"`null`"},{"kind":"text","text":" to unset the constraint."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"literal","value":null},{"type":"reference","id":502,"name":"LogicalSize"},{"type":"reference","id":510,"name":"PhysicalSize"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":277,"name":"setMinimizable","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":860,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L860"}],"signatures":[{"id":278,"name":"setMinimizable","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Sets whether the window's native minimize button is enabled or not.\n\n#### Platform-specific\n\n- **Linux / iOS / Android:** Unsupported."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setMinimizable(false);\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":279,"name":"minimizable","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":331,"name":"setPosition","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1262,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1262"}],"signatures":[{"id":332,"name":"setPosition","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Sets the window outer position."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent, LogicalPosition } from '@tauri-apps/api/window';\nawait getCurrent().setPosition(new LogicalPosition(600, 500));\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":333,"name":"position","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The new position, in logical or physical pixels."}]},"type":{"type":"union","types":[{"type":"reference","id":521,"name":"LogicalPosition"},{"type":"reference","id":529,"name":"PhysicalPosition"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":362,"name":"setProgressBar","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1524,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1524"}],"signatures":[{"id":363,"name":"setProgressBar","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Sets the taskbar progress state.\n\n#### Platform-specific\n\n- **Linux / macOS**: Progress bar is app-wide and not specific to this window.\n- **Linux**: Only supported desktop environments with "},{"kind":"code","text":"`libunity`"},{"kind":"text","text":" (e.g. GNOME)."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent, ProgressBarStatus } from '@tauri-apps/api/window';\nawait getCurrent().setProgressBar({\n  status: ProgressBarStatus.Normal,\n  progress: 50,\n});\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":364,"name":"state","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":192,"name":"ProgressBarState"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":271,"name":"setResizable","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":814,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L814"}],"signatures":[{"id":272,"name":"setResizable","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Updates the window resizable flag."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setResizable(false);\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":273,"name":"resizable","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":305,"name":"setShadow","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1073,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1073"}],"signatures":[{"id":306,"name":"setShadow","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Whether or not the window should have shadow.\n\n#### Platform-specific\n\n- **Windows:**\n  - "},{"kind":"code","text":"`false`"},{"kind":"text","text":" has no effect on decorated window, shadows are always ON.\n  - "},{"kind":"code","text":"`true`"},{"kind":"text","text":" will make ndecorated window have a 1px white border,\nand on Windows 11, it will have a rounded corners.\n- **Linux:** Unsupported."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setShadow(false);\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":307,"name":"enable","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":322,"name":"setSize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1164,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1164"}],"signatures":[{"id":323,"name":"setSize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Resizes the window with a new inner size."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent, LogicalSize } from '@tauri-apps/api/window';\nawait getCurrent().setSize(new LogicalSize(600, 500));\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":324,"name":"size","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The logical or physical inner size."}]},"type":{"type":"union","types":[{"type":"reference","id":502,"name":"LogicalSize"},{"type":"reference","id":510,"name":"PhysicalSize"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":342,"name":"setSkipTaskbar","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1360,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1360"}],"signatures":[{"id":343,"name":"setSkipTaskbar","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Whether the window icon should be hidden from the taskbar or not.\n\n#### Platform-specific\n\n- **macOS:** Unsupported."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setSkipTaskbar(true);\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":344,"name":"skip","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"true to hide window icon, false to show it."}]},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":283,"name":"setTitle","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":901,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L901"}],"signatures":[{"id":284,"name":"setTitle","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Sets the window title."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().setTitle('Tauri');\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"parameters":[{"id":285,"name":"title","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The new title"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":296,"name":"show","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":998,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L998"}],"signatures":[{"id":297,"name":"show","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Sets the window visibility to true."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().show();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":360,"name":"startDragging","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":1499,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1499"}],"signatures":[{"id":361,"name":"startDragging","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Starts dragging the window."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().startDragging();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":264,"name":"theme","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":742,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L742"}],"signatures":[{"id":265,"name":"theme","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the window's current theme.\n\n#### Platform-specific\n\n- **macOS:** Theme was introduced on macOS 10.14. Returns "},{"kind":"code","text":"`light`"},{"kind":"text","text":" on macOS 10.13 and below."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst theme = await getCurrent().theme();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The window theme."}]}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":452,"name":"Theme"}]}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":262,"name":"title","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":721,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L721"}],"signatures":[{"id":263,"name":"title","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the window's current title."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nconst title = await getCurrent().title();\n```"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":290,"name":"toggleMaximize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":950,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L950"}],"signatures":[{"id":291,"name":"toggleMaximize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Toggles the window maximized state."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().toggleMaximize();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":288,"name":"unmaximize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":934,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L934"}],"signatures":[{"id":289,"name":"unmaximize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Unmaximizes the window."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().unmaximize();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":294,"name":"unminimize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"window.ts","line":982,"character":8,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L982"}],"signatures":[{"id":295,"name":"unminimize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Unminimizes the window."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { getCurrent } from '@tauri-apps/api/window';\nawait getCurrent().unminimize();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise indicating the success or failure of the operation."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":203,"name":"getAll","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"window.ts","line":328,"character":9,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L328"}],"signatures":[{"id":204,"name":"getAll","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets a list of instances of "},{"kind":"code","text":"`Window`"},{"kind":"text","text":" for all available windows."}]},"type":{"type":"array","elementType":{"type":"reference","id":197,"name":"Window"}}}]},{"id":198,"name":"getByLabel","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"window.ts","line":310,"character":9,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L310"}],"signatures":[{"id":199,"name":"getByLabel","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the Window for the webview associated with the given label."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { Window } from '@tauri-apps/api/window';\nconst mainWindow = Window.getByLabel('main');\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The Window instance to communicate with the webview or null if the webview doesn't exist."}]}]},"parameters":[{"id":200,"name":"label","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The webview window label."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":197,"name":"Window"}]}}]},{"id":201,"name":"getCurrent","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"window.ts","line":321,"character":9,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L321"}],"signatures":[{"id":202,"name":"getCurrent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Get an instance of "},{"kind":"code","text":"`Window`"},{"kind":"text","text":" for the current window."}]},"type":{"type":"reference","id":197,"name":"Window"}}]},{"id":205,"name":"getFocusedWindow","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"window.ts","line":342,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L342"}],"signatures":[{"id":206,"name":"getFocusedWindow","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets the focused window."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { Window } from '@tauri-apps/api/window';\nconst focusedWindow = Window.getFocusedWindow();\n```"}]},{"tag":"@returns","content":[{"kind":"text","text":"The Window instance to communicate with the webview or "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" if there is not any focused window."}]}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","id":197,"name":"Window"}]}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Constructors","children":[207]},{"title":"Properties","children":[211,212]},{"title":"Methods","children":[266,311,300,223,298,234,238,258,250,248,242,254,246,256,244,252,260,213,286,292,371,386,377,383,368,365,380,389,218,236,240,268,232,316,313,280,319,345,351,354,348,302,308,337,334,339,357,328,274,325,277,331,362,271,305,322,342,283,296,360,264,262,290,288,294,203,198,201,205]}],"sources":[{"fileName":"window.ts","line":255,"character":6,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L255"}]},{"id":447,"name":"Effects","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"The window effects configuration object"}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"2.0.0"}]}]},"children":[{"id":451,"name":"color","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Window effect color. Affects "},{"kind":"inline-tag","tag":"@link","text":"Blur","target":432},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@link","text":"Acrylic","target":433},{"kind":"text","text":" only\non Windows 10 v1903+. Doesn't have any effect on Windows 7 or Windows 11."}]},"sources":[{"fileName":"window.ts","line":1960,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1960"}],"type":{"type":"reference","id":501,"name":"Color"}},{"id":448,"name":"effects","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"List of Window effects to apply to the Window.\nConflicting effects will apply the first one and ignore the rest."}]},"sources":[{"fileName":"window.ts","line":1947,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1947"}],"type":{"type":"array","elementType":{"type":"reference","id":411,"name":"Effect"}}},{"id":450,"name":"radius","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Window effect corner radius **macOS Only**"}]},"sources":[{"fileName":"window.ts","line":1955,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1955"}],"type":{"type":"intrinsic","name":"number"}},{"id":449,"name":"state","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Window effect state **macOS Only**"}]},"sources":[{"fileName":"window.ts","line":1951,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1951"}],"type":{"type":"reference","id":437,"name":"EffectState"}}],"groups":[{"title":"Properties","children":[451,448,450,449]}],"sources":[{"fileName":"window.ts","line":1942,"character":10,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1942"}]},{"id":180,"name":"Monitor","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Allows you to retrieve information about a given monitor."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"children":[{"id":181,"name":"name","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable name of the monitor"}]},"sources":[{"fileName":"window.ts","line":36,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L36"}],"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"id":183,"name":"position","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"the Top-left corner position of the monitor relative to the larger full screen area."}]},"sources":[{"fileName":"window.ts","line":40,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L40"}],"type":{"type":"reference","id":529,"name":"PhysicalPosition"}},{"id":184,"name":"scaleFactor","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The scale factor that can be used to map physical pixels to logical pixels."}]},"sources":[{"fileName":"window.ts","line":42,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L42"}],"type":{"type":"intrinsic","name":"number"}},{"id":182,"name":"size","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The monitor's resolution."}]},"sources":[{"fileName":"window.ts","line":38,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L38"}],"type":{"type":"reference","id":510,"name":"PhysicalSize"}}],"groups":[{"title":"Properties","children":[181,183,184,182]}],"sources":[{"fileName":"window.ts","line":34,"character":17,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L34"}]},{"id":192,"name":"ProgressBarState","kind":256,"kindString":"Interface","flags":{},"children":[{"id":194,"name":"progress","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The progress bar progress. This can be a value ranging from "},{"kind":"code","text":"`0`"},{"kind":"text","text":" to "},{"kind":"code","text":"`100`"}]},"sources":[{"fileName":"window.ts","line":182,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L182"}],"type":{"type":"intrinsic","name":"number"}},{"id":193,"name":"status","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The progress bar status."}]},"sources":[{"fileName":"window.ts","line":178,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L178"}],"type":{"type":"reference","id":186,"name":"ProgressBarStatus"}},{"id":195,"name":"unityUri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The identifier for your app to communicate with the Unity desktop window manager **Linux Only**"}]},"sources":[{"fileName":"window.ts","line":186,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L186"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[194,193,195]}],"sources":[{"fileName":"window.ts","line":174,"character":17,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L174"}]},{"id":454,"name":"ScaleFactorChanged","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"The payload for the "},{"kind":"code","text":"`scaleChange`"},{"kind":"text","text":" event."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"1.0.2"}]}]},"children":[{"id":455,"name":"scaleFactor","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The new window scale factor."}]},"sources":[{"fileName":"window.ts","line":55,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L55"}],"type":{"type":"intrinsic","name":"number"}},{"id":456,"name":"size","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The new window size"}]},"sources":[{"fileName":"window.ts","line":57,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L57"}],"type":{"type":"reference","id":510,"name":"PhysicalSize"}}],"groups":[{"title":"Properties","children":[455,456]}],"sources":[{"fileName":"window.ts","line":53,"character":10,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L53"}]},{"id":466,"name":"WindowOptions","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration for the window to create."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"children":[{"id":494,"name":"acceptFirstMouse","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether clicking an inactive window also clicks through to the webview on macOS."}]},"sources":[{"fileName":"window.ts","line":2060,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2060"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":486,"name":"alwaysOnBottom","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the window should always be below other windows."}]},"sources":[{"fileName":"window.ts","line":2018,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2018"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":485,"name":"alwaysOnTop","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the window should always be on top of other windows or not."}]},"sources":[{"fileName":"window.ts","line":2016,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2016"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":468,"name":"center","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Show window in the center of the screen.."}]},"sources":[{"fileName":"window.ts","line":1978,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1978"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":500,"name":"closable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the window's native close button is enabled or not. Defaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"window.ts","line":2091,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2091"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":487,"name":"contentProtected","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Prevents the window contents from being captured by other apps."}]},"sources":[{"fileName":"window.ts","line":2020,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2020"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":484,"name":"decorations","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the window should have borders and bars or not."}]},"sources":[{"fileName":"window.ts","line":2014,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2014"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":490,"name":"fileDropEnabled","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the file drop is enabled or not on the webview. By default it is enabled.\n\nDisabling it is required to use drag and drop on the frontend on Windows."}]},"sources":[{"fileName":"window.ts","line":2042,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2042"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":480,"name":"focus","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the window will be initially focused or not."}]},"sources":[{"fileName":"window.ts","line":2002,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2002"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":479,"name":"fullscreen","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the window is in fullscreen mode or not."}]},"sources":[{"fileName":"window.ts","line":2000,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2000"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":472,"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The initial height."}]},"sources":[{"fileName":"window.ts","line":1986,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1986"}],"type":{"type":"intrinsic","name":"number"}},{"id":493,"name":"hiddenTitle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If "},{"kind":"code","text":"`true`"},{"kind":"text","text":", sets the window title to be hidden on macOS."}]},"sources":[{"fileName":"window.ts","line":2056,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2056"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":497,"name":"incognito","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not the webview should be launched in incognito mode.\n\n#### Platform-specific\n\n- **Android:** Unsupported."}]},"sources":[{"fileName":"window.ts","line":2079,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2079"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":476,"name":"maxHeight","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum height. Only applies if "},{"kind":"code","text":"`maxWidth`"},{"kind":"text","text":" is also set."}]},"sources":[{"fileName":"window.ts","line":1994,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1994"}],"type":{"type":"intrinsic","name":"number"}},{"id":475,"name":"maxWidth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum width. Only applies if "},{"kind":"code","text":"`maxHeight`"},{"kind":"text","text":" is also set."}]},"sources":[{"fileName":"window.ts","line":1992,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1992"}],"type":{"type":"intrinsic","name":"number"}},{"id":498,"name":"maximizable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the window's native maximize button is enabled or not. Defaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"window.ts","line":2083,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2083"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":482,"name":"maximized","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the window should be maximized upon creation or not."}]},"sources":[{"fileName":"window.ts","line":2010,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2010"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":474,"name":"minHeight","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The minimum height. Only applies if "},{"kind":"code","text":"`minWidth`"},{"kind":"text","text":" is also set."}]},"sources":[{"fileName":"window.ts","line":1990,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1990"}],"type":{"type":"intrinsic","name":"number"}},{"id":473,"name":"minWidth","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The minimum width. Only applies if "},{"kind":"code","text":"`minHeight`"},{"kind":"text","text":" is also set."}]},"sources":[{"fileName":"window.ts","line":1988,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1988"}],"type":{"type":"intrinsic","name":"number"}},{"id":499,"name":"minimizable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the window's native minimize button is enabled or not. Defaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"window.ts","line":2087,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2087"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":477,"name":"resizable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the window is resizable or not."}]},"sources":[{"fileName":"window.ts","line":1996,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1996"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":489,"name":"shadow","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not the window has shadow.\n\n#### Platform-specific\n\n- **Windows:**\n  - "},{"kind":"code","text":"`false`"},{"kind":"text","text":" has no effect on decorated window, shadows are always ON.\n  - "},{"kind":"code","text":"`true`"},{"kind":"text","text":" will make ndecorated window have a 1px white border,\nand on Windows 11, it will have a rounded corners.\n- **Linux:** Unsupported."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"2.0.0"}]}]},"sources":[{"fileName":"window.ts","line":2036,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2036"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":488,"name":"skipTaskbar","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not the window icon should be added to the taskbar."}]},"sources":[{"fileName":"window.ts","line":2022,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2022"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":495,"name":"tabbingIdentifier","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Defines the window [tabbing identifier](https://developer.apple.com/documentation/appkit/nswindow/1644704-tabbingidentifier) on macOS.\n\nWindows with the same tabbing identifier will be grouped together.\nIf the tabbing identifier is not set, automatic tabbing will be disabled."}]},"sources":[{"fileName":"window.ts","line":2067,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2067"}],"type":{"type":"intrinsic","name":"string"}},{"id":491,"name":"theme","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The initial window theme. Defaults to the system theme.\n\nOnly implemented on Windows and macOS 10.14+."}]},"sources":[{"fileName":"window.ts","line":2048,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2048"}],"type":{"type":"reference","id":452,"name":"Theme"}},{"id":478,"name":"title","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Window title."}]},"sources":[{"fileName":"window.ts","line":1998,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1998"}],"type":{"type":"intrinsic","name":"string"}},{"id":492,"name":"titleBarStyle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The style of the macOS title bar."}]},"sources":[{"fileName":"window.ts","line":2052,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2052"}],"type":{"type":"reference","id":453,"name":"TitleBarStyle"}},{"id":481,"name":"transparent","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the window is transparent or not.\nNote that on "},{"kind":"code","text":"`macOS`"},{"kind":"text","text":" this requires the "},{"kind":"code","text":"`macos-private-api`"},{"kind":"text","text":" feature flag, enabled under "},{"kind":"code","text":"`tauri.conf.json > tauri > macOSPrivateApi`"},{"kind":"text","text":".\nWARNING: Using private APIs on "},{"kind":"code","text":"`macOS`"},{"kind":"text","text":" prevents your application from being accepted to the "},{"kind":"code","text":"`App Store`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"window.ts","line":2008,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2008"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":467,"name":"url","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Remote URL or local file path to open.\n\n- URL such as "},{"kind":"code","text":"`https://github.com/tauri-apps`"},{"kind":"text","text":" is opened directly on a Tauri window.\n- data: URL such as "},{"kind":"code","text":"`data:text/html,<html>...`"},{"kind":"text","text":" is only supported with the "},{"kind":"code","text":"`window-data-url`"},{"kind":"text","text":" Cargo feature for the "},{"kind":"code","text":"`tauri`"},{"kind":"text","text":" dependency.\n- local file path or route such as "},{"kind":"code","text":"`/path/to/page.html`"},{"kind":"text","text":" or "},{"kind":"code","text":"`/users`"},{"kind":"text","text":" is appended to the application URL (the devServer URL on development, or "},{"kind":"code","text":"`tauri://localhost/`"},{"kind":"text","text":" and "},{"kind":"code","text":"`https://tauri.localhost/`"},{"kind":"text","text":" on production)."}]},"sources":[{"fileName":"window.ts","line":1976,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1976"}],"type":{"type":"intrinsic","name":"string"}},{"id":496,"name":"userAgent","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The user agent for the webview."}]},"sources":[{"fileName":"window.ts","line":2071,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2071"}],"type":{"type":"intrinsic","name":"string"}},{"id":483,"name":"visible","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the window should be immediately visible upon creation or not."}]},"sources":[{"fileName":"window.ts","line":2012,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2012"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":471,"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The initial width."}]},"sources":[{"fileName":"window.ts","line":1984,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1984"}],"type":{"type":"intrinsic","name":"number"}},{"id":469,"name":"x","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The initial vertical position. Only applies if "},{"kind":"code","text":"`y`"},{"kind":"text","text":" is also set."}]},"sources":[{"fileName":"window.ts","line":1980,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1980"}],"type":{"type":"intrinsic","name":"number"}},{"id":470,"name":"y","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The initial horizontal position. Only applies if "},{"kind":"code","text":"`x`"},{"kind":"text","text":" is also set."}]},"sources":[{"fileName":"window.ts","line":1982,"character":2,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1982"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[494,486,485,468,500,487,484,490,480,479,472,493,497,476,475,498,482,474,473,499,477,489,488,495,491,478,492,481,467,496,483,471,469,470]}],"sources":[{"fileName":"window.ts","line":1968,"character":10,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1968"}]},{"id":501,"name":"Color","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"an array RGBA colors. Each value has minimum of 0 and maximum of 255."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"2.0.0"}]}]},"sources":[{"fileName":"window.ts","line":1788,"character":5,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L1788"}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"number"}]}},{"id":185,"name":"CursorIcon","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"window.ts","line":110,"character":12,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L110"}],"type":{"type":"union","types":[{"type":"literal","value":"default"},{"type":"literal","value":"crosshair"},{"type":"literal","value":"hand"},{"type":"literal","value":"arrow"},{"type":"literal","value":"move"},{"type":"literal","value":"text"},{"type":"literal","value":"wait"},{"type":"literal","value":"help"},{"type":"literal","value":"progress"},{"type":"literal","value":"notAllowed"},{"type":"literal","value":"contextMenu"},{"type":"literal","value":"cell"},{"type":"literal","value":"verticalText"},{"type":"literal","value":"alias"},{"type":"literal","value":"copy"},{"type":"literal","value":"noDrop"},{"type":"literal","value":"grab"},{"type":"literal","value":"grabbing"},{"type":"literal","value":"allScroll"},{"type":"literal","value":"zoomIn"},{"type":"literal","value":"zoomOut"},{"type":"literal","value":"eResize"},{"type":"literal","value":"nResize"},{"type":"literal","value":"neResize"},{"type":"literal","value":"nwResize"},{"type":"literal","value":"sResize"},{"type":"literal","value":"seResize"},{"type":"literal","value":"swResize"},{"type":"literal","value":"wResize"},{"type":"literal","value":"ewResize"},{"type":"literal","value":"nsResize"},{"type":"literal","value":"neswResize"},{"type":"literal","value":"nwseResize"},{"type":"literal","value":"colResize"},{"type":"literal","value":"rowResize"}]}},{"id":457,"name":"FileDropEvent","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"The file drop event types."}]},"sources":[{"fileName":"window.ts","line":61,"character":5,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L61"}],"type":{"type":"union","types":[{"type":"reflection","declaration":{"id":458,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":460,"name":"paths","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"window.ts","line":62,"character":21,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L62"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":459,"name":"type","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"window.ts","line":62,"character":6,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L62"}],"type":{"type":"literal","value":"hover"}}],"groups":[{"title":"Properties","children":[460,459]}],"sources":[{"fileName":"window.ts","line":62,"character":4,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L62"}]}},{"type":"reflection","declaration":{"id":461,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":463,"name":"paths","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"window.ts","line":63,"character":20,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L63"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":462,"name":"type","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"window.ts","line":63,"character":6,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L63"}],"type":{"type":"literal","value":"drop"}}],"groups":[{"title":"Properties","children":[463,462]}],"sources":[{"fileName":"window.ts","line":63,"character":4,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L63"}]}},{"type":"reflection","declaration":{"id":464,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":465,"name":"type","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"window.ts","line":64,"character":6,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L64"}],"type":{"type":"literal","value":"cancel"}}],"groups":[{"title":"Properties","children":[465]}],"sources":[{"fileName":"window.ts","line":64,"character":4,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L64"}]}}]}},{"id":452,"name":"Theme","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"window.ts","line":45,"character":5,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L45"}],"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"}]}},{"id":453,"name":"TitleBarStyle","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"window.ts","line":46,"character":5,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L46"}],"type":{"type":"union","types":[{"type":"literal","value":"visible"},{"type":"literal","value":"transparent"},{"type":"literal","value":"overlay"}]}},{"id":445,"name":"availableMonitors","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"window.ts","line":2157,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2157"}],"signatures":[{"id":446,"name":"availableMonitors","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the list of all the monitors available on the system."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { availableMonitors } from '@tauri-apps/api/window';\nconst monitors = availableMonitors();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":180,"name":"Monitor"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":441,"name":"currentMonitor","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"window.ts","line":2124,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2124"}],"signatures":[{"id":442,"name":"currentMonitor","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the monitor on which the window currently resides.\nReturns "},{"kind":"code","text":"`null`"},{"kind":"text","text":" if current monitor can't be detected."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { currentMonitor } from '@tauri-apps/api/window';\nconst monitor = currentMonitor();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","id":180,"name":"Monitor"},{"type":"literal","value":null}]}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":406,"name":"getAll","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"window.ts","line":206,"character":9,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L206"}],"signatures":[{"id":407,"name":"getAll","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gets a list of instances of "},{"kind":"code","text":"`Window`"},{"kind":"text","text":" for all available windows."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"array","elementType":{"type":"reference","id":197,"name":"Window"}}}]},{"id":404,"name":"getCurrent","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"window.ts","line":194,"character":9,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L194"}],"signatures":[{"id":405,"name":"getCurrent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Get an instance of "},{"kind":"code","text":"`Window`"},{"kind":"text","text":" for the current window."}],"blockTags":[{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","id":197,"name":"Window"}}]},{"id":443,"name":"primaryMonitor","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"window.ts","line":2141,"character":15,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L2141"}],"signatures":[{"id":444,"name":"primaryMonitor","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the primary monitor of the system.\nReturns "},{"kind":"code","text":"`null`"},{"kind":"text","text":" if it can't identify any monitor as a primary one."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```typescript\nimport { primaryMonitor } from '@tauri-apps/api/window';\nconst monitor = primaryMonitor();\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","id":180,"name":"Monitor"},{"type":"literal","value":null}]}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Enumerations","children":[411,437,186,408]},{"title":"Classes","children":[392,521,502,529,510,197]},{"title":"Interfaces","children":[447,180,192,454,466]},{"title":"Type Aliases","children":[501,185,457,452,453]},{"title":"Functions","children":[445,441,406,404,443]}],"sources":[{"fileName":"window.ts","line":19,"character":0,"url":"https://github.com/tauri-apps/tauri/blob/618c453/tooling/api/src/window.ts#L19"}]}],"groups":[{"title":"Modules","children":[1,12,61,78,179]}]}