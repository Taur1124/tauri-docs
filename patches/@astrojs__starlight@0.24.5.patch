diff --git a/utils/navigation.ts b/utils/navigation.ts
index aa4ab1f4db2f4fcb6adb8122cadb89e3e05791b9..e4a85077b588de3e33cf64e7eb4fb91501fc1c13 100644
--- a/utils/navigation.ts
+++ b/utils/navigation.ts
@@ -91,7 +91,7 @@ function groupFromAutogenerateConfig(
 	routes: Route[],
 	currentPathname: string
 ): Group {
-	const { collapsed: subgroupCollapsed, directory } = item.autogenerate;
+	const { collapsed: subgroupCollapsed, directory, sort, order } = item.autogenerate;
 	const localeDir = locale ? locale + '/' + directory : directory;
 	const dirDocs = routes.filter(
 		(doc) =>
@@ -99,8 +99,9 @@ function groupFromAutogenerateConfig(
 			stripExtension(doc.id) === localeDir ||
 			// Match against `foo/anything/else.md`.
 			doc.id.startsWith(localeDir + '/')
-	);
-	const tree = treeify(dirDocs, localeDir);
+	)
+	const sorted = !sort ? dirDocs : dirDocs.sort(sortHandler(sort, order)).map((doc, i) => {doc.entry.data.sidebar.order = i; return doc});
+	const tree = treeify(sorted, localeDir);
 	return {
 		type: 'group',
 		label: pickLang(item.translations, localeToLang(locale)) || item.label,
@@ -110,6 +111,13 @@ function groupFromAutogenerateConfig(
 	};
 }
 
+const sortHandler = (kind: 'date', order: 'ascending' | 'descending') => {
+	if (kind === 'date') {
+		if (order === 'ascending') return (docA: Route, docB: Route) => docA.entry.data.date! > docB.entry.data.date! ? 1 : -1
+		return (docA: Route, docB: Route) => docA.entry.data.date! < docB.entry.data.date! ? 1 : -1
+	}
+}
+
 /** Check if a string starts with one of `http://` or `https://`. */
 const isAbsolute = (link: string) => /^https?:\/\//.test(link);
 
