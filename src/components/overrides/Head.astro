---
import type { Props } from '@astrojs/starlight/props';
import Default from '@astrojs/starlight/components/Head.astro';


// TODO: Better handling for the case 'not png' because [...path].png.ts generates .png endpoints
let htmlPage = true;

// TODO: Refactor for readability
// TODO: Set default custom image for /blog and perhaps other key pages, currently there's a default TAURI image og.png
let socialImage;
const path = Astro.url.pathname;
if (!path.endsWith('.png')) {
	let image;
	if (path == '/') {
		image = '/index';
	} else if (path.endsWith('features/' || 'features')) {
		image = '/features/index';
	} else if (path.endsWith('blog/' || 'blog')) {
		// This is because /blog doesn't have a .md file, it's generated by the starlight-blog plugin
		socialImage = new URL('/og.png', Astro.url);
		return;
	} else {
		image = path.replace(/\/$/, '');
	}
	if (image) {
		socialImage = new URL(`/social-images/content/docs${image}.png`, Astro.url);
	}
} else {
	htmlPage = false;
}

---

<!-- /* TODO: - Check if is possible dynamic generate on astro.config head without overriding Head.astro
              - Make sure the URL pattern matches every page and if default fallback is working.
-->
<Default {...Astro.props} />
{
	htmlPage && (
		<>
			<meta name="twitter:image" content={socialImage} />
			<meta property="og:image" content={socialImage} />
		</>
	)
}
