//99% from https://github.com/withastro/docs/blob/096295e306cd7b4973fb2be154e2bdbcba1df8fd/src/util/getOgImageUrl.ts

import type { GetStaticPathsOptions, GetStaticPathsResult } from 'astro';
import { getStaticPaths } from 'src/pages/open-graph/[...docs]';

const routes = (await getStaticPaths({} as GetStaticPathsOptions)) as GetStaticPathsResult;

/**  All the OpenGraph image paths as generated by our `getStaticPaths`. */
const paths = new Set(routes.map(({ params }) => params.docs));

/**
 * Get the path to the OpenGraph image for a page
 * @param path Pathname of the page URL.
 * @param isFallback Whether or not this page is displaying fallback content.
 * @returns Path to the OpenGraph image if found. Otherwise, `undefined`.
 */
export function getOgImageUrl(path: string, isFallback: boolean): string | undefined {
	let imagePath = path.replace(/^\//, '').replace(/\/$/, '') + '.png';

	if (isFallback) {
		// Remove the language segment for fallback pages.
		imagePath = imagePath.slice(imagePath.indexOf('/') + 1);
	}
	if (paths.has(imagePath)) return '/open-graph/' + imagePath;
}