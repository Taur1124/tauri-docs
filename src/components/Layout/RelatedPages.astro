---
import RelatedPagesNode from "./RelatedPagesNode.astro";
import Dropdown from "@src/components/Dropdown.astro";
import { t } from "astro-i18n";
import IconCaretDown from "~icons/bi/caret-down-fill";

interface Props {
  entries: any[];
  dropdown?: boolean;
}

let { entries, dropdown } = Astro.props;

export const buildSidebarObject = (collection: any[]) => {
  collection.sort((a, b) => a.slug.localeCompare(b.slug));

  let result: any[] = [];
  let initialValue = { result };

  // Nest the entries
  collection.forEach((entry) => {
    entry.slug
      .split("/")
      .reduce(
        (
          accumulator: { [x: string]: any; result: any[] },
          _slugPart: string
        ) => {
          if (!accumulator[_slugPart]) {
            accumulator[_slugPart] = { result: [] };
            accumulator.result.push({
              ...entry,
              _slugPart,
              _children: accumulator[_slugPart].result,
            });
          }

          return accumulator[_slugPart];
        },
        initialValue
      );
  });

  return result;
};
---

{
  dropdown && (
    <Dropdown btnClass="btn-compact flex gap-2 items-center">
      <Fragment slot="toggle">
        {t("layout.related-pages")}
        <IconCaretDown />
        </Fragment>
      <div slot="content">
        <ul>
          <RelatedPagesNode entries={entries} />
        </ul>
      </div>
    </Dropdown>
  )
}
{
  !dropdown && (
    <ul>
      <li class="small-caps">{t("layout.related-pages")}</li>
      <RelatedPagesNode entries={entries} />
    </ul>
  )
}
