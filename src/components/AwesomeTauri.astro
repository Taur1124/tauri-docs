---
const { section } = Astro.props;
import { createMarkdownProcessor } from '@astrojs/markdown-remark';
import { JSDOM } from 'jsdom';
import { LinkCard, CardGrid } from '@astrojs/starlight/components';

const md = await createMarkdownProcessor();
const url = 'https://raw.githubusercontent.com/tauri-apps/awesome-tauri/dev/README.md';
const res = await fetch(url);
const content = await md.render(await res.text());
const dom = new JSDOM('<!DOCTYPE html>' + content.code);
const document = dom.window.document;
let categories = document.querySelectorAll('h3');
let cards = [];
if (section === 'plugins')
	for (const header of categories) {
		if (header.textContent === 'Plugins') {
			let list = header.nextSibling.nextSibling as HTMLElement;
			for (const entry: HTMLLinkElement of list.children) {
				cards.push({
					href: entry.children[0].href,
					name: entry.children[0].textContent,
					description: entry.textContent.split(' - ')[1],
				});
			}
		}
	}
if (section === 'integrations')
	for (const header of categories) {
		if (header.textContent === 'Integrations') {
			let list = header.nextSibling.nextSibling as HTMLElement;
			for (const entry: HTMLLinkElement of list.children) {
				cards.push({
					href: entry.children[0].href,
					name: entry.children[0].textContent,
					description: entry.textContent.split(' - ')[1],
				});
			}
		}
	}
---

<CardGrid>
	{
		cards.map((card) => (
			<LinkCard title={card.name} description={card.description} href={card.href} />
		))
	}
</CardGrid>
