---
import crypto from 'crypto'
interface Props {
  inlineMenu?: boolean
  ariaLabel?: string
  class?: string
  btnClass?: string
  alignment?: 'leading' | 'trailing'
}

// TODO: Handle inline (might just do at callsights and not in this component)

const uuid = crypto.randomUUID()

let {
  inlineMenu,
  ariaLabel,
  class: className,
  btnClass,
  alignment,
} = Astro.props
---

<div class="relative">
  <button class=`button-${uuid} ${btnClass}`>
    <slot name="toggle" />
  </button>
  <dialog
    class:list={[
      `dialog-${uuid}`,
      'bg-base-300 rounded absolute w-max max-w-[90vw] overflow-y-auto max-h-[calc(100svh-(var(--nav-height)+32px))] styled-scrollbar',
      alignment === 'trailing' ? 'right-0' : 'left-0',
    ]}
  >
    <slot name="content" />
  </dialog>
</div>
<style>
  dialog {
    inset-inline-start: unset;
    inset-inline-end: unset;
  }
</style>

<script define:vars={{ uuid }}>
  const button = document.querySelector(`.button-${uuid}`)
  const dialog = document.querySelector(`.dialog-${uuid}`)

  button?.addEventListener('mousedown', () => {
    if (dialog.open) {
      dialog.close()
    } else {
      dialog.show()
    }
  })
  button.addEventListener('mouseup', () => {
    document.addEventListener(
      'mousedown',
      () => {
        dialog.close()
      },
      { once: true }
    )
  })
</script>
