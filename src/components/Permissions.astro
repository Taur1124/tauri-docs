---
/**
 * Usage:
 * <Permissions plugin="authenticator" />
 */

import { createMarkdownProcessor } from '@astrojs/markdown-remark';
import fs from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';

interface Props {
  plugin: string;
}

const { plugin } = Astro.props;

async function importMDX(p: string): Promise<string> {
  console.log(import.meta.url);
  const base = fileURLToPath(import.meta.url);
  const dirname = path.dirname(base);

  const dir = path.join(
    dirname,
    '../../packages/plugins-workspace/plugins',
    p,
    'permissions/autogenerated',
    'reference.md'
  );

  try {
    const content = await fs.readFile(dir, 'utf-8');
    return content;
  } catch (err) {
    console.error(`Error reading file ${dir}: ${err}`);
    throw err;
  }
}
const md = await createMarkdownProcessor();

const pageContent: string = await importMDX(plugin);
const content = await md.render(pageContent);

const code = `<code dir="auto">${plugin}:	</code>`;
---

<p set:html={prefix} />
<Fragment set:html={content.code} />
